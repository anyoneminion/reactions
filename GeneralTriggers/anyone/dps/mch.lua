local tbl = 
{
	
	{
		actions = 
		{
		},
		conditions = 
		{
		},
		enabled = true,
		eventType = 13,
		execute = "if not gAnyoneCoreInitialize then\n\tAnyoneCore = {\n\t\tenabled = true,\n\t\tvisible = true,\n\t\topen = false,\n\t\tWindowStyle = {\n\t\t[\"Text\"] = { [1] = 0, [2] = 0, [3] = 0, [4] = 0 },\n\t\t[\"WindowBg\"] = { [1] = 0, [2] = 0, [3] = 0, [4] = 0.85 },\n\t\t[\"Button\"] = { [1] = 20, [2] = 75, [3] = 100, [4] = 1 },\n\t\t[\"ButtonHovered\"] = { [1] = 15, [2] = 31, [3] = 90, [4] = 0.75 },\n\t\t[\"CheckMark\"] = { [1] = 250, [2] = 250, [3] = 250, [4] = 1 },\n\t\t[\"TextSelectedBg\"] = { [1] = 0, [2] = 0, [3] = 0, [4] = 0 },\n\t\t[\"TooltipBg\"] = { [1] = 7, [2] = 0, [3] = 12, [4] = 0.9 },\n\t\t[\"ModalWindowDarkening\"] = { [1] = 7, [2] = 0, [3] = 12, [4] = 0.75 },\n\t\t},\n\t\tversion = 3.272,\n\t\thelperVersion = 1.0,\n\t\tnews = \"Check out my Patreon page. Link is on the sidebar.\",\n\t\tData = {\n\t\t\tselected = 1,\n\t\t\tTimeout = 0,\n\t\t},\n\t}\n\tFaceAway = {\n\t\tenabled = true,\n\t\tvisible = true,\n\t\topen = false,\n\t\tWindowStyle = {\n\t\t\t[\"Text\"] = { [1] = 0, [2] = 0, [3] = 0, [4] = 0 },\n\t\t\t[\"WindowBg\"] = { [1] = 0, [2] = 0, [3] = 0, [4] = 0 },\n\t\t},\n\t\tFaceAway = false,\n\t\tFaceAwayKey = false,\n\t\tkeybindstatus = false,\n\t\tData = {\n\t\t\tsleep = 0,\n\t\t},\n\t}\n\tAnyoneCore.Settings = {\n\t\tpreviouslyOpen = false,\n\t\tKeybind = 0x11, -- ctrl is default\n\t\tUseKeybind = false,\n\t\tFaceAwayEnabler = false,\n\t\tDrawFaceAway = true,\n\t\tDrawFaceAwayNoReactions = false,\n\t\tUseFaceAwayReactions = true,\n\t\tWarnForUpdate = false,\n\t\tAutomaticUpdater = false,\n\t\tAlwaysMini = true,\n\t\tCheckJob = true,\n\t\tDrawOrbs = true,\n\t\tDrawDragonHeads = true,\n\t\tDrawBlackWhiteOrbs = true,\t\t\n\t\tDrawChainLightning = true,\n\t\tDrawOccludedFrontOrbs = true,\n\t\tDrawClouds = true,\n\t\tDrawNaelQuotes = true,\n\t\tDrawYaten = true,\n\t\tKnockbackMirrorUptime = true,\n\t\tInterruptSecondAdd = false,\n\t\tLeftSide = true,\n\t\tDisableAssist = false,\n\t\tAddsPhasePot = true,\n\t\tAutoSetSpeedHacks = false,\n\t\tAutoSetMaxCameraZoom = false,\n\t\tUseSprint = false,\n\t\tNeverenpi = false,\n\t\tNeverDash = false,\n\t\tAttackingGaruda = true,\n\t\tUseMoogleTTS = false,\n\t\tUnderstandDanger = false,\n\t\tAntiGhosting = true,\n\t\tPrepullHelper = true,\n\t\tPrepullHelperPeloton = true,\n\t\tPrepullBackflip = true,\n\t\tPrepullPlacePet = true,\n\t\tPrepullAetherpact = true,\n\t\tPrepullDivineVeil = true,\n\t\tNorthStratMitigation = true,\n\t\tDiamondFrostUptime = false,\n\t\tDutyHelper = false,\n\t\tDutyHelperMitigation = true,\n\t\tDutyHelperTargeting = true,\n\t\tDutyHelperInterrupt = true,\n\t\tDutyHelperKnockback = true,\n\t\tDutyHelperGrabAggro = true,\n\t\tCameraZoomValue = 35,\n\t\tBadTeamDelay = 200,\n\t\tMiniReactionsTimer = false,\n\t\tDebugLevel = 1,\n\t\tUseCleanse = true,\n\t\tUseCleanseTop = false,\n\t\tSaferKnockback = false,\n\t\tNewTargetMethod = true,\n\t\tPotionOverride = false,\n\t\tSongEntityCount = false,\n\t\tHideUnrelatedJobs = true,\n\t\tTargetDolls = true,\n\t\tForceApexDolls = false,\n\t\tSafeDashing = true,\n\t\tSafeInstanceOnly = false,\n\t\tDontDisableStandardDolls = false,\n\t\tCheckFood = true,\n\t\tCheckFoodDuration = true,\n\t\tCheckFoodDurationValue = 15,\n\t\tAutoPartner = true,\n\t\tQueenGauge = {\n\t\t\t{ name = \"other\", id = nil, gauge = 50 },\n\t\t\t{ name = \"e5s\", id = 906, gauge = 50 },\n\t\t\t{ name = \"e6s\", id = 907, gauge = 50 },\n\t\t\t{ name = \"e7s\", id = 908, gauge = 50 },\n\t\t\t{ name = \"e8s\", id = 909, gauge = 50 },\n\t\t\t{ name = \"ucob\", id = 733, gauge = 50 },\n\t\t\t{ name = \"uwu\", id = 777, gauge = 50 },\n\t\t\t{ name = \"tea\", id = 887, gauge = 50 },\n\t\t\t{ name = \"wolex\", id = 887, gauge = 50 },\n\t\t\t{ name = \"unreal\", id = 887, gauge = 50 },\n\t\t},\n\t\ttimelineTable = {\n\t\t\t[31] = { -- machinist\n\t\t\t\t[906] = \"anyone\\\\dps\\\\mch\\\\e5s\", -- edens verse\n\t\t\t\t[907] = \"anyone\\\\dps\\\\mch\\\\e6s\",\n\t\t\t\t[908] = \"anyone\\\\dps\\\\mch\\\\e7s\",\n\t\t\t\t[909] = \"anyone\\\\dps\\\\mch\\\\e8s\",\n\t\t\t\t[733] = \"anyone\\\\dps\\\\mch\\\\ucob\", -- ucob\n\t\t\t\t[777] = \"anyone\\\\dps\\\\mch\\\\uwu beta\", -- uwu\n\t\t\t\t[887] = \"rikudou\\\\mch\\\\riku tea\", -- tea\n\t\t\t},\n\t\t\t[23] = { -- bard\n\t\t\t\t[906] = \"anyone\\\\dps\\\\brd\\\\e5s\", --edens verse\n\t\t\t\t[907] = \"anyone\\\\dps\\\\brd\\\\e6s\",\n\t\t\t\t[908] = \"anyone\\\\dps\\\\brd\\\\e7s\",\n\t\t\t\t[909] = \"anyone\\\\dps\\\\brd\\\\e8s\",\n\t\t\t\t[733] = \"anyone\\\\dps\\\\brd\\\\ucob\", -- ucob\n\t\t\t\t[777] = nil, -- uwu\n\t\t\t\t[887] = \"rikudou\\\\brd\\\\riku tea\", -- tea\n\t\t\t},\n\t\t\t[38] = { -- dancer\n\t\t\t\t[906] = \"anyone\\\\dps\\\\dnc\\\\e5s\", --edens verse\n\t\t\t\t[907] = \"anyone\\\\dps\\\\dnc\\\\e6s\",\n\t\t\t\t[908] = \"anyone\\\\dps\\\\dnc\\\\e7s\",\n\t\t\t\t[909] = \"anyone\\\\dps\\\\dnc\\\\e8s\",\n\t\t\t\t[733] = nil, -- ucob\n\t\t\t\t[777] = nil, -- uwu\n\t\t\t\t[887] = \"anyone\\\\dps\\\\dnc\\\\tea\", -- tea\n\t\t\t},\n\t\t\t[27] = { -- summoner\n\t\t\t\t[906] = \"anyone\\\\dps\\\\smn\\\\e5s\", --edens verse\n\t\t\t\t[907] = \"anyone\\\\dps\\\\smn\\\\e6s\",\n\t\t\t\t[908] = \"anyone\\\\dps\\\\smn\\\\e7s\",\n\t\t\t\t[909] = \"anyone\\\\dps\\\\smn\\\\e8s\",\n\t\t\t\t[733] = \"anyone\\\\dps\\\\smn\\\\ucob\", -- ucob\n\t\t\t\t[777] = nil, -- uwu\n\t\t\t\t[887] = \"anyone\\\\dps\\\\smn\\\\tea BETA\", -- tea\n\t\t\t},\n\t\t\t[34] = { -- samurai\n\t\t\t\t[906] = \"anyone\\\\dps\\\\sam\\\\e5s\", --edens verse\n\t\t\t\t[907] = \"anyone\\\\dps\\\\sam\\\\e6s\",\n\t\t\t\t[908] = \"anyone\\\\dps\\\\sam\\\\e7s\",\t\n\t\t\t\t[909] = \"anyone\\\\dps\\\\sam\\\\e8s\",\n\t\t\t\t[733] = nil, -- ucob\n\t\t\t\t[777] = nil, -- uwu\n\t\t\t\t[887] = \"anyone\\\\dps\\\\sam\\\\TEA beta\", -- tea\n\t\t\t},\n\t\t\t[22] = { -- dragoon\n\t\t\t\t[906] = \"anyone\\\\dps\\\\drg\\\\e5s\", --edens verse\n\t\t\t\t[907] = \"anyone\\\\dps\\\\drg\\\\e6s\",\n\t\t\t\t[908] = \"anyone\\\\dps\\\\drg\\\\e7s\",\n\t\t\t\t[909] = \"anyone\\\\dps\\\\drg\\\\e8s\",\n\t\t\t\t[733] = \"anyone\\\\dps\\\\drg\\\\ucob\", -- ucob\n\t\t\t\t[777] = nil, -- uwu\n\t\t\t\t[887] = \"anyone\\\\dps\\\\drg\\\\TEA beta\", -- tea\n\t\t\t},\n\t\t\t[25] = { -- black mage\n\t\t\t\t[906] = \"mattyice&anyone\\\\dps\\\\blm\\\\e5s\", --edens verse\n\t\t\t\t[907] = \"mattyice&anyone\\\\dps\\\\blm\\\\e6s\",\n\t\t\t\t[908] = \"mattyice&anyone\\\\dps\\\\blm\\\\e7s\",\n\t\t\t\t[909] = \"mattyice&anyone\\\\dps\\\\blm\\\\e8s\",\n\t\t\t\t[733] = nil, -- ucob\n\t\t\t\t[777] = nil, -- uwu\n\t\t\t\t[887] = nil, -- tea\n\t\t\t},\n\t\t\t[35] = { -- red mage\n\t\t\t\t[906] = \"mattyice&anyone\\\\dps\\\\rdm\\\\e5s\", --edens verse\n\t\t\t\t[907] = \"mattyice&anyone\\\\dps\\\\rdm\\\\e6s\",\n\t\t\t\t[908] = \"mattyice&anyone\\\\dps\\\\rdm\\\\e7s\",\n\t\t\t\t[909] = \"mattyice&anyone\\\\dps\\\\rdm\\\\e8s\",\n\t\t\t\t[733] = nil, -- ucob\n\t\t\t\t[777] = nil, -- uwu\n\t\t\t\t[887] = nil, -- tea\n\t\t\t},\n\t\t\t[32] = { -- dark knight\n\t\t\t\t[906] = \"anyone\\\\tank\\\\drk\\\\e5s\", --edens verse\n\t\t\t\t[907] = \"anyone\\\\tank\\\\drk\\\\e6s\",\n\t\t\t\t[908] = \"anyone\\\\tank\\\\drk\\\\e7s\",\n\t\t\t\t[909] = \"anyone\\\\tank\\\\drk\\\\e8s\",\n\t\t\t\t[733] = nil, -- ucob\n\t\t\t\t[777] = nil, -- uwu\n\t\t\t\t[887] = nil, -- tea\n\t\t\t},\n\t\t\t[21] = { -- warrior\n\t\t\t\t[906] = \"anyone\\\\tank\\\\war\\\\e5s\", --edens verse\n\t\t\t\t[907] = \"anyone\\\\tank\\\\war\\\\e6s\",\t\t\t\t\n\t\t\t\t[908] = \"anyone\\\\tank\\\\war\\\\e7s\",\n\t\t\t\t[909] = \"anyone\\\\tank\\\\war\\\\e8s\",\n\t\t\t\t[733] = nil, -- ucob\n\t\t\t\t[777] = nil, -- uwu\n\t\t\t\t[887] = nil, -- tea\n\t\t\t},\n\t\t\t[19] = { -- paladin\n\t\t\t\t[906] = \"anyone\\\\tank\\\\pld\\\\e5s\", --edens verse\n\t\t\t\t[907] = \"anyone\\\\tank\\\\pld\\\\e6s\",\n\t\t\t\t[908] = \"anyone\\\\tank\\\\pld\\\\e7s\",\n\t\t\t\t[909] = \"anyone\\\\tank\\\\pld\\\\e8s\",\n\t\t\t\t[733] = nil, -- ucob\n\t\t\t\t[777] = nil, -- uwu\n\t\t\t\t[887] = nil, -- tea\n\t\t\t},\n\t\t\t[37] = { -- gunbreaker\n\t\t\t\t[906] = \"anyone\\\\tank\\\\gnb\\\\e5s\", --edens verse\n\t\t\t\t[907] = \"anyone\\\\tank\\\\gnb\\\\e6s\",\n\t\t\t\t[908] = \"anyone\\\\tank\\\\gnb\\\\e7s\",\n\t\t\t\t[909] = \"anyone\\\\tank\\\\gnb\\\\e8s\",\n\t\t\t\t[733] = nil, -- ucob\n\t\t\t\t[777] = nil, -- uwu\n\t\t\t\t[887] = nil, -- tea\n\t\t\t},\n\t\t},\n\t\tgeneralTable = {\n\t\t\t[31] = \"anyone\\\\dps\\\\mch\", --machinist\n\t\t\t[23] = \"anyone\\\\dps\\\\brd\", -- bard\n\t\t\t[38] = \"anyone\\\\dps\\\\dnc\", -- dancer\n\t\t\t[27] = \"anyone\\\\dps\\\\smn\", -- summoner\n\t\t\t[34] = \"anyone\\\\dps\\\\sam\", -- samurai\n\t\t\t[22] = \"anyone\\\\dps\\\\drg\", -- dragoon\n\t\t\t[25] = \"mattyice&anyone\\\\dps\\\\blm\", -- black mage\n\t\t\t[35] = \"mattyice&anyone\\\\dps\\\\rdm\", -- red mage\n\t\t\t[32] = \"anyone\\\\tank\\\\drk\", -- dark knight\n\t\t\t[21] = \"anyone\\\\tank\\\\war\", -- warrior\n\t\t\t[19] = \"anyone\\\\tank\\\\pld\", -- paladin\n\t\t\t[37] = \"anyone\\\\tank\\\\gnb\", -- gunbreaker\n\t\t},\n\t}\n\tlocal Data = AnyoneCore.Data\n\tlocal MinionPath,LuaModsPath = GetStartupPath(),GetLuaModsPath() \n\tlocal SettingsPath = LuaModsPath .. \"\\\\TensorReactions\\\\AnyoneCore\"\n\tlocal DutyHelperPath = SettingsPath .. \"\\\\dutyhelper\"\n\tlocal ModuleSettings = SettingsPath .. \"\\\\settings.lua\"\n\tlocal AddonIcon = LuaModsPath .. [[TensorReactions\\AnyoneCore\\images\\Icon.png]]\n\t\n\tfunction updater(n)\n\t\t---if not Player.InCombat then\n\t\t\tif Data.UpdateTick == nil then\n\t\t\t\tif n == 1 then -- checking for updates\n\t\t\t\t\tio.open(tostring(LuaModsPath)..\"TensorReactions/AnyoneCore/data/version.txt\",\"w\"):close()\n\t\t\t\t\tio.popen([[start /b powershell -Command \"Try { Add-Content ]]..Data.LogFile..[[ -Value 'Checking Github for updates...'; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12, [Net.SecurityProtocolType]::Tls11; $json = (Invoke-WebRequest -Uri https://api.github.com/repos/AnyoneMinion/reactions/releases -UseBasicParsing | ConvertFrom-Json); Add-Content ]]..Data.LogFile..[[ -Value 'Newest version found:', $json[0].tag_name; Set-Content -Path ']] ..LuaModsPath.. [[\\TensorReactions\\AnyoneCore\\data\\version.txt' -Value $json[0].tag_name; Add-Content ]]..Data.LogFile..[[ -Value 'Generating changelog.'; Set-Content -Path ']] ..SettingsPath.. [[/data/changelog.txt' -Value $json[0].body, `n, $json[1].body, `n, $json[2].body, `n, $json[3].body, `n, $json[4].body, `n, $json[5].body; Add-Content ]]..Data.LogFile..[[ -Value 'Done, closing powershell process.'; } Catch { $_ | Out-File -Append ]]..Data.LogFile..[[ -Encoding Ascii }; stop-process -Id $PID\"]]):close()\n\t\t\t\t\tData.TimerType = \"UpdateChecker\"\n\t\t\t\t\tData.UpdateTick = Now()\n\t\t\t\t\tAnyoneCore.log(\"Checking for updates... Please wait.\", 1)\n\t\t\t\t\tAnyoneCore.Data.checkStatus = \"Checking for updates... Please wait.\"\n\t\t\t\telseif n == 2 then\n\t\t\t\t\tio.open(tostring(LuaModsPath)..\"TensorReactions/AnyoneCore/data/status.txt\",\"w\"):close()\n\t\t\t\t\tio.popen([[start /b powershell -Command \"Try { if(!(test-path ']] ..LuaModsPath.. [[\\TensorReactionsBackup')) { Add-Content ]]..Data.LogFile..[[ -Value 'Creating folder TensorReactionsBackup'; New-Item -Path ']] ..LuaModsPath.. [[\\TensorReactionsBackup' -ItemType Directory -Force }; Add-Content ]]..Data.LogFile..[[ -Value 'Creating backup of TensorReactions folder...'; Compress-Archive -Path ']] ..LuaModsPath.. [[TensorReactions\\GeneralTriggers', ']] ..LuaModsPath.. [[TensorReactions\\TimelineTriggers', ']] ..LuaModsPath.. [[TensorReactions\\AnyoneCore' -DestinationPath ]] ..LuaModsPath.. [[\\TensorReactionsBackup\\TensorReactions_$((Get-Date).ToString('MM_dd_HHmm')).zip -Force; Add-Content ]]..Data.LogFile..[[ -Value 'Finding latest release on Github.'; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12, [Net.SecurityProtocolType]::Tls11; $tag = (Invoke-WebRequest -Uri https://api.github.com/repos/AnyoneMinion/reactions/releases -UseBasicParsing | ConvertFrom-Json)[0].tag_name; Add-Content ]]..Data.LogFile..[[ -Value 'Latest release is:', $tag, 'Beginning download of latest release'; Invoke-WebRequest https://github.com/AnyoneMinion/reactions/releases/download/$tag/TensorReactions.zip -Out ]] ..LuaModsPath.. [[\\\\TensorReactions\\\\TensorReactions.zip; Add-Content ]]..Data.LogFile..[[ -Value 'Decompressing...'; Expand-Archive ]] ..LuaModsPath.. [[\\TensorReactions\\TensorReactions.zip -DestinationPath ]] ..LuaModsPath.. [[\\TensorReactions\\ -Force; Add-Content ]]..Data.LogFile..[[ -Value 'Removing old zip file'; Remove-Item ]] ..LuaModsPath.. [[\\TensorReactions\\TensorReactions.zip -Force; Start-Sleep -s 1; Set-Content -Path ']] ..LuaModsPath.. [[\\TensorReactions\\AnyoneCore\\data\\status.txt' -Value 'Done'; Add-Content ]]..Data.LogFile..[[ -Value 'Finished updating.'; } Catch { $_ | Out-File ]]..SettingsPath..[[\\data\\output.txt }; stop-process -Id $PID\"]]):close()\n\t\t\t\t\tData.TimerType = \"UpdateDownloader\"\n\t\t\t\t\tData.UpdateTick = Now()\n\t\t\t\t\tAnyoneCore.log(\"Downloading newest update... Please wait.\", 1)\n\t\t\t\t\tAnyoneCore.Data.checkStatus = \"Updater starting.\"\n\t\t\t\telseif n == 3 then\n\t\t\t\t\tio.open(tostring(LuaModsPath)..\"TensorReactions/AnyoneCore/data/status.txt\",\"w\"):close()\n\t\t\t\t\tio.popen([[start /b powershell -Command \"Try { if(!(test-path ']] ..LuaModsPath.. [[\\TensorReactionsBackup')) { New-Item -Path ']] ..LuaModsPath.. [[\\TensorReactionsBackup' -ItemType Directory -Force }; Compress-Archive -Path ']] ..LuaModsPath.. [[TensorReactions\\GeneralTriggers', ']] ..LuaModsPath.. [[TensorReactions\\TimelineTriggers', ']] ..LuaModsPath.. [[TensorReactions\\AnyoneCore' -DestinationPath ]] ..LuaModsPath.. [[\\TensorReactionsBackup\\TensorReactions_$((Get-Date).ToString('MM_dd_HHmm')).zip -Force; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12, [Net.SecurityProtocolType]::Tls11; $tag = (Invoke-WebRequest -Uri https://api.github.com/repos/Q-W-E-R-T/Healer-reactions/releases -UseBasicParsing | ConvertFrom-Json)[0].tag_name; Invoke-WebRequest https://github.com/Q-W-E-R-T/Healer-reactions/releases/download/$tag/TensorReactions.zip -Out ]] ..LuaModsPath.. [[\\\\TensorReactions\\\\TensorReactions.zip; Expand-Archive ]] ..LuaModsPath.. [[\\TensorReactions\\TensorReactions.zip -DestinationPath ]] ..LuaModsPath.. [[ -Force; Remove-Item ]] ..LuaModsPath.. [[\\TensorReactions\\TensorReactions.zip -Force; Start-Sleep -s 1; Set-Content -Path ']] ..LuaModsPath.. [[\\TensorReactions\\AnyoneCore\\data\\status.txt' -Value 'Done'; } Catch { $_ | Out-File ]]..SettingsPath..[[\\data\\output.txt }; stop-process -Id $PID\"]]):close()\n\t\t\t\t\tData.TimerType = \"UpdateDownloader\"\n\t\t\t\t\tData.UpdateTick = Now()\n\t\t\t\t\tAnyoneCore.log(\"Downloading newest update... Please wait.\", 1)\n\t\t\t\t\tAnyoneCore.Data.checkStatus = \"Updater starting.\"\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tData.checkStatus = \"There's already another process going on, please wait for it to end.\"\n\t\t\t\tAnyoneCore.log(\"Please wait for the current process to end before you start another...\", 1)\n\t\t\tend\n\t\t---else\n\t\t\t---AnyoneCore.log(\"Updater: Player is in combat. Please exit combat to update AnyoneCore.\", 2)\n\t\t---end\n\tend\n\n\tfunction AnyoneCoreReload()\n\t\tif AnyoneCore.open == true then AnyoneCore.Settings.previouslyOpen = true AnyoneCore.save(true) else AnyoneCore.Settings.previouslyOpen = false AnyoneCore.save(true) end\n\t\tAnyoneCore.log(\"Reloading AnyoneCore...\", 2)\n\t\ttable.clear(Data)\n\t\ttable.clear(FaceAway.Data)\n\t\tgAnyoneCoreInitialize = false\n\t\tTensorCore.API.TensorReactions.reloadGeneralTriggers()\n\t\tTensorCore.API.TensorReactions.reloadTimelineTriggers()\n\tend\n\t\n\tfunction WarnForUpdate()\n\t\tif Data.gitVersion ~= nil and (AnyoneCore.version < Data.gitVersion) and AnyoneCore.Settings.WarnForUpdate == true then\n\t\t\tif AnyoneCore.Settings.AutomaticUpdater == false then\n\t\t\t\tTensorCore.sendParsedChatMessage(\"/e {color:255, 255, 0}[AnyoneCore] {color:0, 255, 0}A new update to Anyone's reactions is available to download. Open AnyoneCore in your FFXIVMinion menu to update.\")\n\t\t\t\tAnyoneCore.log(\"New update available!\", 1)\n\t\t\telseif AnyoneCore.Settings.AutomaticUpdater == true then\n\t\t\t\tTensorCore.sendParsedChatMessage(\"/e {color:255, 255, 0}[AnyoneCore] {color:0, 255, 0}A new update to Anyone's Reactions was found. Starting update...\")\n\t\t\t\tAnyoneCore.log(\"New update available, automatically starting download.\", 1)\n\t\t\t\tupdater(2)\n\t\t\tend\n\t\telse\n\t\t\tAnyoneCore.log(\"No updates available.\", 2)\n\t\tend\t\n\tend\n\n\tfunction JobCheck(n)\n\t\tif n == nil or n == 1 then\n\t\t\tlocal CurrentTimeline = TensorCore.API.TensorReactions.getTimelineTriggerProfileName()\n\t\t\tlocal CurrentGeneral = TensorCore.API.TensorReactions.getGeneralTriggerProfileName()\n\t\t\tif AnyoneCore.Settings.CheckJob == true then\n\t\t\t\tif (CurrentTimeline ~= AnyoneCore.Settings.timelineTable[Player.job][Player.localmapid]) and (AnyoneCore.Settings.timelineTable[Player.job][Player.localmapid] ~= nil) then\n\t\t\t\t\tTensorCore.sendParsedChatMessage(\"/e {color:0, 255, 0}[AnyoneCore] {color:255, 200, 0}Incorrect timeline profile selected for current job. Note: This might be thrown off by slow loading.\")\n\t\t\t\t\tTensorCore.sendParsedChatMessage(\"/e {color:0, 255, 0}[AnyoneCore] {color:255, 200, 0}Current profile: '\"..tostring(CurrentTimeline)..\"'\")\n\t\t\t\t\tTensorCore.sendParsedChatMessage(\"/e {color:0, 255, 0}[AnyoneCore] {color:255, 200, 0}Correct profile: '\"..tostring(AnyoneCore.Settings.timelineTable[Player.job][Player.localmapid])..\"'.\")\n\t\t\t\t\tAnyoneCore.log(\"Job check failed. Sending chat warning.\", 2)\n\t\t\t\tend\n\t\t\t\tif CurrentGeneral ~= AnyoneCore.Settings.generalTable[Player.job] then\n\t\t\t\t\tTensorCore.sendParsedChatMessage(\"/e {color:0, 255, 0}[AnyoneCore] {color:255, 200, 0}Incorrect general trigger profile selected for current job.\") \n\t\t\t\t\tTensorCore.sendParsedChatMessage(\"/e {color:0, 255, 0}[AnyoneCore] {color:255, 200, 0}Current profile: '\"..tostring(CurrentGeneral)..\"'\")\n\t\t\t\t\tTensorCore.sendParsedChatMessage(\"/e {color:0, 255, 0}[AnyoneCore] {color:255, 200, 0}Correct profile: '\"..tostring(AnyoneCore.Settings.generalTable[Player.job])..\"'.\")\n\t\t\t\t\tAnyoneCore.log(\"Job check failed. Sending chat warning.\", 2)\n\t\t\t\tend\n\t\t\tend\n\t\telseif n == nil or n == 2 then\n\t\t\tif Player.job == 31 then\n\t\t\t\tfor i=1,#AnyoneCore.Settings.QueenGauge do\n\t\t\t\t\tif Player.localmapid == AnyoneCore.Settings.QueenGauge[i].id then\n\t\t\t\t\t\tACR_TensorMagnum_SummonQueen_Gauge = AnyoneCore.Settings.QueenGauge[i].gauge\n\t\t\t\t\t\tAnyoneCore.log(\"Set Magnum's queen gauge usage to \"..AnyoneCore.Settings.QueenGauge[i].gauge, 2)\n\t\t\t\t\telse\n\t\t\t\t\t\tACR_TensorMagnum_SummonQueen_Gauge = AnyoneCore.Settings.QueenGauge[1].gauge\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\telseif n ~= nil and n == 3 then\n\t\t\tif AnyoneCore.Settings.CheckFood == true then\n\t\t\t\tlocal tbl = {}\n\t\t\t\tfor _,buff in pairs(Player.buffs) do\n\t\t\t\t\tif buff.id == 48 then\n\t\t\t\t\t\ttable.insert(tbl,buff)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tif table.size(tbl) > 0 then\n\t\t\t\t\tif AnyoneCore.Settings.CheckFoodDuration == true and tbl[1].duration < (AnyoneCore.Settings.CheckFoodDurationValue * 60) then\n\t\t\t\t\t\tTensorCore.sendParsedChatMessage(\"/e {color:0, 255, 0}[AnyoneCore] {color:255, 0, 0}Warning: {color:255, 200, 0}Food buff is running low. <se.4>\")\n\t\t\t\t\t\tAnyoneCore.log(\"Player's food is running low. Sending chat warning.\", 2)\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tTensorCore.sendParsedChatMessage(\"/e {color:0, 255, 0}[AnyoneCore] {color:255, 0, 0}Warning: {color:255, 200, 0}Player does not currently have any food. <se.3>\")\n\t\t\t\t\tAnyoneCore.log(\"Player does not have any food. Sending chat warning.\", 2)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\tlocal PreviousSave,lastcheck = {},0\n\tfunction AnyoneCore.save(force)\n\t\tif FolderExists(SettingsPath) then\n\t\t\tif (force or TimeSince(lastcheck) > 30000) then\n\t\t\t\tlastcheck = Now()\n\t\t\t\tif not table.deepcompare(AnyoneCore.Settings,PreviousSave) then\n\t\t\t\t\tAnyoneCore.log(\"Settings have been saved.\", 2)\n\t\t\t\t\tFileSave(ModuleSettings,AnyoneCore.Settings)\n\t\t\t\t\tPreviousSave = table.deepcopy(AnyoneCore.Settings)\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\tAnyoneCore.log(\"Missing AnyoneCore's folder from \"..tostring(SettingsPath)..\", settings will not be saved.\", 3)\n\t\tend\n\tend\n\t\n\tlocal v = table.valid\n\tfunction valid(...)\n\t\tlocal tbl = {...}\n\t\tlocal size = #tbl\n\t\tif size > 0 then\n\t\t\tlocal count = tbl[1]\n\t\t\tif type(count) == \"number\" then\n\t\t\t\tif size == (count + 1) then\n\t\t\t\t\tfor i = 2, size do\n\t\t\t\t\t\tif not v(tbl[i]) then return false end\n\t\t\t\t\tend\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tfor i = 1, size do\n\t\t\t\t\tif not v(tbl[i]) then return false end\n\t\t\t\tend\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\n\n\tfunction LoadSettings()\n\t\tif FileExists(ModuleSettings) then\n\t\t\tlocal tbl = FileLoad(ModuleSettings)\n\t\t\tlocal function scan(tbl,tbl2,depth)\n\t\t\t\tdepth = depth or 0\n\t\t\t\tif valid(2,tbl,tbl2) then\n\t\t\t\t\tfor k,v in pairs(tbl2) do\n\t\t\t\t\t\tif type(v) == \"table\" then\n\t\t\t\t\t\t\tif tbl[k] and valid(tbl[k]) then\n\t\t\t\t\t\t\t\ttbl[k] = table.merge(tbl[k],scan(tbl[k],v,depth+1))\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\ttbl[k] = v\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif tbl[k] ~= tbl2[k] then tbl[k] = tbl2[k] end\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\treturn tbl\n\t\t\tend\n\t\t\tAnyoneCore.Settings = scan(AnyoneCore.Settings,tbl)\n\t\t\tif not AnyoneCore.Data.Loaded then \n\t\t\t\tAnyoneCore.Initialize()\n\t\t\tend\n\t\telse\n\t\t\tif not AnyoneCore.Data.Loaded then \n\t\t\t\tAnyoneCore.Initialize()\n\t\t\tend\n\t\t\tAnyoneCore.log(\"Could not find AnyoneCore's settings. This will happen on first time usage but is an error if not your first time.\")\n\t\tend\n\tend\n\t\n\tfunction AnyoneCore.log(text, n)\n\t\tif n == 1 or n == nil then\n\t\t\td(\"[AnyoneCore v\"..tostring(AnyoneCore.version)..\"] \"..text)\n\t\telseif n == 2 then\n\t\t\tif AnyoneCore.Settings.DebugLevel >= 2 then\n\t\t\t\td(\"[AnyoneCore v\"..tostring(AnyoneCore.version)..\"] \"..text)\n\t\t\tend\n\t\telseif n == 3 then\n\t\t\tml_gui.showconsole = true\n\t\t\td(\"[AnyoneCore v\"..tostring(AnyoneCore.version)..\"] CRITICAL ERROR\")\n\t\t\td(\"[AnyoneCore v\"..tostring(AnyoneCore.version)..\"] \"..text)\n\t\telseif n == 4 then\n\t\t\tif Data.str ~= text and AnyoneCore.Settings.DebugLevel > 2 then\n\t\t\t\td(\"[AnyoneCore v\"..tostring(AnyoneCore.version)..\"] \"..text)\n\t\t\t\tData.str = text\n\t\t\tend\n\t\tend\n\t\tif AnyoneCore.Settings.DebugLevel == 3 then\n\t\t\tlocal time = os.date(\"%H:%M:%S\")\n\t\t\tif n == 3 then\n\t\t\t\tData.towrite = \"[\" .. time .. \"] CRITICAL ERROR: \" .. text .. \"\\n\"\n\t\t\telse\n\t\t\t\tData.towrite = \"[\" .. time .. \"] \" .. text .. \"\\n\"\n\t\t\tend\n\t\t\tFileWrite(Data.LogFile, Data.towrite, true)\n\t\tend\n\tend\n\n\tfunction AnyoneCore.debug()\n\t\tlocal str = \"\" \n\t\tfor k, v in pairs(_G) do if string.find(k, \"ACR_\", 1, true) then str = str .. k .. \" = \" .. tostring(v) .. \"\\n\" end end\n\t\tlocal addons = {}\n\t\tlocal AddonFolder = FolderList(LuaModsPath, nil, true)\n\t\tfor i=1,#AddonFolder do\n\t\t\ttable.insert(addons, (AddonFolder[i]))\n\t\tend\n\t\tlocal date = os.date(\"%Y%m%d_%H-%M-%S\")\n\t\tlocal message = \"AnyoneCore version: \" .. tostring(AnyoneCore.version) .. \"\\n\" .. tostring(AnyoneCore.Settings) .. \"\\n\" .. tostring(AnyoneCore.Data) .. \"\\n\\n\\nCurrently loaded general triggers: \" .. tostring(TensorCore.API.TensorReactions.getGeneralTriggerProfileName()) .. \"\\nCurrently loaded timeline triggers: \" .. tostring(TensorCore.API.TensorReactions.getTimelineTriggerProfileName()) .. \"\\n\\n\\nACR Settings: \\n\" .. str .. \"\\n\\n Addons: \" .. tostring(addons) .. \"\\n\\n\"\n\t\tlocal logs = SettingsPath..\"\\\\logs\\\\Debugging_\"..date..\".txt\"\n\t\tFileWrite(logs, message, true)\n\t\tio.popen([[start /b powershell -Command \"$version = ' PowerShell Version: ' + $PSVersionTable.PSVersion.Major + '.' + $PSVersionTable.PSVersion.Minor; Add-Content ]]..logs..[[ -Value $version; stop-process -Id $PID\"]]):close()\n\t\tAnyoneCore.log(\"Debug log created at \" ..tostring(logs), 1)\n\tend\n\t\n\t--- Taken from Rikudou's function in Moogle Telegraphs for determining if player is inside an AOE. Used for safe dashing/jumping.\n\tfunction AnyoneCore.avoidanceCallback(aoe)\n\t\tif aoe == nil then return false end\n\t\tlocal ent = EntityList:Get(aoe.entityID)\n\t\tif ent then\n\t\t\treturn not TensorCore.isFriendly(ent)\n\t\tend\n\tend\n\n\tfunction AnyoneCore.ValidInput()\n\t\tif AnyoneCore.Settings.QueenGauge[AnyoneCore.Data.selected].gauge > 100 then\n\t\t\tAnyoneCore.Settings.QueenGauge[AnyoneCore.Data.selected].gauge = 100\n\t\t\tAnyoneCore.save(true)\n\t\telseif AnyoneCore.Settings.QueenGauge[AnyoneCore.Data.selected].gauge < 50 then\n\t\t\tAnyoneCore.Settings.QueenGauge[AnyoneCore.Data.selected].gauge = 50\n\t\t\tAnyoneCore.save(true)\n\t\telse\n\t\t\tAnyoneCore.save(true)\n\t\tend\n\t\t\n\t\tif AnyoneCore.Settings.CameraZoomValue > 100 then\n\t\t\tAnyoneCore.Settings.CameraZoomValue = 100\n\t\t\tAnyoneCore.save(true)\n\t\telseif AnyoneCore.Settings.CameraZoomValue < 20 then\n\t\t\tAnyoneCore.Settings.CameraZoomValue = 20\n\t\t\tAnyoneCore.save(true)\n\t\telse\n\t\t\tAnyoneCore.save(true)\n\t\tend\n\t\t\n\t\tif AnyoneCore.Settings.BadTeamDelay > 1500 then\n\t\t\tAnyoneCore.Settings.BadTeamDelay = 1500\n\t\t\tAnyoneCore.save(true)\n\t\telseif AnyoneCore.Settings.BadTeamDelay < 0 then\n\t\t\tAnyoneCore.Settings.BadTeamDelay = 0\n\t\t\tAnyoneCore.save(true)\n\t\telse\n\t\t\tAnyoneCore.save(true)\n\t\tend\n\n\t\tif AnyoneCore.Settings.CheckFoodDurationValue > 30 then\n\t\t\tAnyoneCore.Settings.CheckFoodDurationValue = 30\n\t\t\tAnyoneCore.save(true)\n\t\telseif AnyoneCore.Settings.CheckFoodDurationValue < 1 then\n\t\t\tAnyoneCore.Settings.CheckFoodDurationValue = 1\n\t\t\tAnyoneCore.save(true)\n\t\telse\n\t\t\tAnyoneCore.save(true)\n\t\tend\n\tend\n\n\t---Idea and code for sidebar links was shamelessly stolen from Kali. Thank you Kali.\n\tLinksTable = {\n\t\t[1] = {\n\t\t\tname = \"dummy page doesnt work\",\n\t\t\ticon = MinionPath .. [[\\GUI\\UI_Textures\\code.png]],\n\t\t\tlink = nil,\n\t\t\ttooltip = \"first link doesnt work so lol\",\n\t\t\tlasthover = 0,\n\t\t\tsize = { x = 25, y = 25}\n\t\t},\n\t\t[2] = {\n\t\t\tname = \"GitHub\",\n\t\t\ticon = LuaModsPath .. [[\\TensorReactions\\AnyoneCore\\images\\githublogo.png]],\n\t\t\tlink = [[https://github.com/AnyoneMinion/reactions/releases]],\n\t\t\ttooltip = \"Releases page of GitHub, if you want to see any changes or download an older release.\\n\\nLeft-click to be sent to my GitHub page.\",\n\t\t\tlasthover = 0,\n\t\t\tsize = { x = 25, y = 25}\n\t\t},\n\t\t[3] = {\n\t\t\tname = \"Ko-fi\",\n\t\t\ticon = LuaModsPath .. [[\\TensorReactions\\AnyoneCore\\images\\kofi.png]],\n\t\t\tlink = [[https://ko-fi.com/anyoneminion]],\n\t\t\ttooltip = \"If you appreciate the work I put into reactions, then throw me a few bucks on my Ko-fi page. This is for one time donations.\\n\\nLeft-click to be sent to my donation page.\",\n\t\t\tlasthover = 0,\n\t\t\tsize = { x = 25, y = 25}\n\t\t},\n\t\t[4] = {\n\t\t\tname = \"Patreon\",\n\t\t\ticon = LuaModsPath .. [[\\TensorReactions\\AnyoneCore\\images\\patreon.png]],\n\t\t\tlink = [[https://www.patreon.com/anyoneminion]],\n\t\t\ttooltip = \"If you appreciate the work I put into reactions, then feel free to subscribe to my patreon page.\\n\\nLeft-click to be sent to my patreon page.\",\n\t\t\tlasthover = 0,\n\t\t\tsize = { x = 25, y = 25}\n\t\t},\n\t\t[5] = {\n\t\t\tname = \"Discord\",\n\t\t\ticon = LuaModsPath .. [[\\TensorReactions\\AnyoneCore\\images\\discord.png]],\n\t\t\tlink = [[https://discord.gg/bVABzBA]],\n\t\t\tlink2 = [[https://discord.gg/YtvCbcB]],\n\t\t\ttooltip = \"Left-click to get sent to Rikudou's discord, which is where all reactions support and questions should go.\\n\\nRight-click to get sent to my personal discord, which is meant mostly for support with Profiler and any other addons I develop. There's a few things here for reactions, but I'd prefer discussion to stay in Rikudou's discord.\",\n\t\t\tlasthover = 0,\n\t\t\tsize = { x = 25, y = 25}\n\t\t},\n\t\t[6] = {\n\t\t\tname = \"Trello\",\n\t\t\ticon = LuaModsPath .. [[\\TensorReactions\\AnyoneCore\\images\\trello.png]],\n\t\t\tlink = [[https://trello.com/b/YAn04EOz/anyones-minion-development]],\n\t\t\ttooltip = \"A link to my Trello page that contains a backlog of updates, stuff I'm working on, stuff I've finished and stuff I've abandoned.\",\n\t\t\tlasthover = 0,\n\t\t\tsize = { x = 25, y = 25}\n\t\t},\n\t\t[7] = {\n\t\t\tname = \"Reload\",\n\t\t\ticon = MinionPath .. [[\\GUI\\UI_Textures\\change.png]],\n\t\t\tlink1 = nil,\n\t\t\tlink2 = nil,\n\t\t\tlink3 = true,\n\t\t\ttooltip = \"Reloads AnyoneCore and loads reactions again.\\n\\nMostly meant for debugging and development purposes.\\n\\nLeft-click to reload AnyoneCore and reactions.\",\n\t\t\tlasthover = 0,\n\t\t\tsize = { x = 25, y = 25}\n\t\t},\n\t}\n\t\n\n\t\n\tfunction AnyoneCore.Initialize()\n\t\tif not Data.LogFile then\n\t\t\tlocal date = os.date(\"%Y%m%d_%H-%M-%S\")\n\t\t\tData.LogFile = SettingsPath..\"\\\\logs\\\\\"..date..\".txt\"\n\t\t\tif AnyoneCore.Settings.DebugLevel == 3 then\n\t\t\t\tFileWrite(SettingsPath..\"\\\\logs\\\\\"..date..\".txt\", \"Please take note: it's completely safe to delete these logs as long as you don't need them, they're only here for people to report errors.\\n\")\n\t\t\tend\n\t\tend\n\t\tif AnyoneCore.Settings.AlwaysMini == true then\n\t\t\tml_global_information.drawMode = 0\n\t\tend\n\t\tif AnyoneCore.Settings.AutoSetMaxCameraZoom == true then\n\t\t\tgDevHackMaxZoom = AnyoneCore.Settings.CameraZoomValue\n\t\t\tHacks:SetCamMaxZoom(gDevHackMinZoom,gDevHackMaxZoom)\n\t\tend\n\t\tif not FolderExists(SettingsPath) then\n\t\t\tAnyoneCore.log(\"Error: Certain functions will not work properly until the 'AnyoneCore' folder from the GitHub is properly placed in \" ..LuaModsPath.. \"\\TensorReactions\", 3)\n\t\tend\n\t\tif FolderExists(DutyHelperPath) then\n\t\t\tAnyoneCore.CasterMitigation = FileLoad(DutyHelperPath..\"\\\\castermitigation.lua\")\n\t\t\tAnyoneCore.RDPSMitigation = FileLoad(DutyHelperPath..\"\\\\rdpsmitigation.lua\")\n\t\t\tAnyoneCore.TankMitigation = FileLoad(DutyHelperPath..\"\\\\knockback.lua\")\n\t\t\tAnyoneCore.MDPSMitigation = FileLoad(DutyHelperPath..\"\\\\mdpsmitigation.lua\")\n\t\t\tAnyoneCore.MAOEMitigation = FileLoad(DutyHelperPath..\"\\\\cleartarget.lua\")\n\t\t\tAnyoneCore.AOEMitigation = FileLoad(DutyHelperPath..\"\\\\cleartarget.lua\")\n\t\t\tAnyoneCore.Reprisal = FileLoad(DutyHelperPath..\"\\\\reprisal.lua\")\n\t\t\tAnyoneCore.Knockback = FileLoad(DutyHelperPath..\"\\\\knockback.lua\")\n\t\t\tAnyoneCore.StopCasting = FileLoad(DutyHelperPath..\"\\\\stopcasting.lua\")\n\t\t\tAnyoneCore.ClearTarget = FileLoad(DutyHelperPath..\"\\\\cleartarget.lua\")\n\t\t\tAnyoneCore.FaceAwayID = FileLoad(DutyHelperPath..\"\\\\faceaway.lua\")\n\t\telse\n\t\t\tAnyoneCore.log(\"Error, Duty Helper files not found. Duty Helper will not function properly until the AnyoneCore folder is properly placed in \" ..LuaModsPath.. \"\\TensorReactions\", 3)\n\t\tend\n\t\tif AnyoneCore.Settings.previouslyOpen == true then\n\t\t\tAnyoneCore.open = true\n\t\t\tAnyoneCore.Settings.previouslyOpen = false\n\t\t\tAnyoneCore.save(true)\n\t\tend\n\t\tgAvoidHP = 0\n\t\tgFleeHP = 0\n\t\tgFleeMP = 0\n\t\tgPotionHP = 0\n\t\tgPotionMP = 0\n\t\tgRestHP = 0\n\t\tgRestMP = 0\n\t\tgUseSprint = \"0\"\n\t\tAnyoneCore.Data.Loaded = true\n\tend\n\n\tAnyoneCore.main_tabs = GUI_CreateTabs(\"Updater,Helpers,Reactions,Extra\")\n\tml_gui.ui_mgr:AddMember({ id = \"FFXIVMINION##MENU_AnyoneCore\", name = \"AnyoneCore\", onClick = function() AnyoneCore.open = not AnyoneCore.open end, texture = AddonIcon, tooltip = \"Menu for changing the settings for Anyone's reactions for TensorReactions.\"},\"FFXIVMINION##MENU_HEADER\")\n\tAnyoneCore.log(\"Successfully initialized.\")\n\tAnyoneCore.log(\"If there are any issues, please report them to Anyone#9549 on Discord.\")\n\tgAnyoneCoreInitialize = true\n\tLoadSettings()\nend\n\nif AnyoneCore ~= nil then\n\tif AnyoneCore.Data.UpdateTick ~= nil then\n\t\tif AnyoneCore.Data.Timeout < 10 then\n\t\t\tif TimeSince(AnyoneCore.Data.UpdateTick) > 2500 then\n\t\t\t\tif AnyoneCore.Data.TimerType == \"UpdateChecker\" then\n\t\t\t\t\tAnyoneCore.Data.Timeout = AnyoneCore.Data.Timeout + 1\n\t\t\t\t\tAnyoneCore.Data.checkStatus = \"Checking for updates, please wait. Attempt #\"..tostring(AnyoneCore.Data.Timeout)\n\t\t\t\t\tlocal LuaModsPath = GetLuaModsPath()\n\t\t\t\t\tlocal file = io.open(tostring(LuaModsPath)..\"TensorReactions/AnyoneCore/data/version.txt\") \n\t\t\t\t\tlocal output\n\t\t\t\t\tif file ~= nil then\n\t\t\t\t\t\toutput = file:read()\n\t\t\t\t\t\tfile:close()\t\t\t\t\n\t\t\t\t\telseif file == nil then\n\t\t\t\t\t\tAnyoneCore.log(\"Issue opening file \"..tostring(LuaModsPath)..\"TensorReactions/AnyoneCore/data/version.txt\", 3)\n\t\t\t\t\tend\n\t\t\t\t\tif output ~= nil then\n\t\t\t\t\t\tAnyoneCore.Data.gitVersion = tonumber(output)\n\t\t\t\t\t\tAnyoneCore.Data.checkStatus = nil\n\t\t\t\t\t\tAnyoneCore.Data.UpdateTick = nil\n\t\t\t\t\t\tAnyoneCore.Data.TimerType = nil\n\t\t\t\t\t\tAnyoneCore.Data.Timeout = 0\n\t\t\t\t\t\tAnyoneCore.log(\"Github version number was successfully found. Generating changelog next...\", 2)\n\t\t\t\t\t\tWarnForUpdate()\n\t\t\t\t\t\tlocal file = io.open(tostring(LuaModsPath)..\"TensorReactions/AnyoneCore/data/changelog.txt\") \n\t\t\t\t\t\tif file ~= nil then\n\t\t\t\t\t\t\toutput = file:read(\"*all\")\n\t\t\t\t\t\t\tfile:close()\n\t\t\t\t\t\t\tAnyoneCore.Data.changelog = output\n\t\t\t\t\t\t\tAnyoneCore.log(\"Successfully generated changelog.\")\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tAnyoneCore.log(\"Could not generate changelog.\", 3)\n\t\t\t\t\t\tend\n\t\t\t\t\telseif output == nil then\n\t\t\t\t\t\tAnyoneCore.Data.UpdateTick = Now()\n\t\t\t\t\t\tAnyoneCore.log(\"Attempt #\"..AnyoneCore.Data.Timeout..\"/6: Github version data still empty. Checking again.\", 2)\n\t\t\t\t\tend\n\t\t\t\telseif AnyoneCore.Data.TimerType == \"UpdateDownloader\" then\n\t\t\t\t\tAnyoneCore.Data.Timeout = AnyoneCore.Data.Timeout + 1\n\t\t\t\t\tAnyoneCore.Data.checkStatus = \"Downloading updates, please wait. Attempt #\"..tostring(AnyoneCore.Data.Timeout)\n\t\t\t\t\tlocal LuaModsPath = GetLuaModsPath()\n\t\t\t\t\tlocal file = io.open(tostring(LuaModsPath)..\"TensorReactions/AnyoneCore/data/status.txt\") \n\t\t\t\t\tlocal output\n\t\t\t\t\tif file ~= nil then\n\t\t\t\t\t\toutput = file:read()\n\t\t\t\t\t\tfile:close()\t\t\t\t\n\t\t\t\t\telseif file == nil then\n\t\t\t\t\t\tAnyoneCore.Data.UpdateTick = Now()\n\t\t\t\t\t\tAnyoneCore.log(\"Issue opening file \"..tostring(LuaModsPath)..\"TensorReactions/AnyoneCore/data/status.txt\", 3)\n\t\t\t\t\tend\n\t\t\t\t\tif output ~= nil then\n\t\t\t\t\t\tAnyoneCore.Data.checkStatus = \"Restarting...\"\n\t\t\t\t\t\tAnyoneCore.log(\"Update was downloaded, reloading AnyoneCore.\", 1)\n\t\t\t\t\t\tAnyoneCoreReload()\n\t\t\t\t\telseif output == nil then\n\t\t\t\t\t\tAnyoneCore.Data.UpdateTick = Now()\n\t\t\t\t\t\tAnyoneCore.log(\"Attempt #\"..AnyoneCore.Data.Timeout..\"/6: Status data still empty, trying again.\", 2)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\telseif AnyoneCore.Data.Timeout >= 4 then\n\t\t\tif AnyoneCore.Data.TimerType == \"UpdateChecker\" then\n\t\t\t\tAnyoneCore.Data.checkStatus = \"Checking for updates failed.\"\n\t\t\t\tAnyoneCore.log(\"Could not check for updates.\", 3)\n\t\t\telseif AnyoneCore.Data.TimerType == \"UpdateDownloader\" then\n\t\t\t\tAnyoneCore.Data.checkStatus = \"Downloading newest update failed.\"\n\t\t\t\tAnyoneCore.log(\"Could not download newest update.\", 3)\n\t\t\tend\n\t\t\tAnyoneCore.Data.Timeout = 0\n\t\t\tAnyoneCore.Data.UpdateTick = nil\n\t\t\tAnyoneCore.Data.TimerType = nil\n\t\tend\n\tend\n\tif AnyoneCore.Settings.WarnForUpdate == true then \n\t\tif AnyoneCore.Data.lastUpdateCheck == nil then \n\t\t\tAnyoneCore.Data.lastUpdateCheck = Now() \n\t\t\tupdater(1) \n\t\tend \n\t\tif TimeSince(AnyoneCore.Data.lastUpdateCheck) > 900000 then \n\t\t\tAnyoneCore.log(\"15 minutes have elapsed, checking for a new update.\", 2)\n\t\t\tAnyoneCore.Data.lastUpdateCheck = Now()\n\t\t\tupdater(1)\n\t\tend \n\tend \nend\n\nfunction AnyoneCore.draw()\n\tif AnyoneCore.enabled and AnyoneCore.open then\n\t\tlocal c = 0\n\t\tfor k,v in pairs(AnyoneCore.WindowStyle) do if v[4] ~= 0 then c = c + 1 loadstring([[GUI:PushStyleColor(GUI.Col_]]..k..[[, ]]..(v[1]/255)..[[, ]]..(v[2]/255)..[[, ]]..(v[3]/255)..[[, ]]..v[4]..[[)]])() end end\n\t\tGUI:SetNextWindowSize(515,445,GUI.SetCond_Appearing)\n\t\tlocal winX,winY,posX,posY\n\t\tAnyoneCore.visible, AnyoneCore.open = GUI:Begin(\"AnyoneCore - Reaction Settings Menu\", AnyoneCore.open)\n\t\tif AnyoneCore.visible then\n\t\tlocal tabindex, tabname = GUI_DrawTabs(AnyoneCore.main_tabs) \n\t\tif (tabname == GetString(\"Updater\")) then\n\t\t\tif AnyoneCore.Data.changelog == nil then\n\t\t\t\tGUI:Dummy(145,145) GUI:SameLine(0,0)\n\t\t\t\tGUI:Image(ml_global_information.path .. \"\\\\LuaMods\\\\TensorReactions\\\\AnyoneCore\\\\images\\\\Icon.png\", 200, 200)\n\t\t\telse\n\t\t\t\tGUI:BeginChildFrame(1, 495, 225)\n\t\t\t\tGUI:TextWrapped(tostring(AnyoneCore.Data.changelog))\n\t\t\t\tGUI:EndChildFrame()\n\t\t\tend\n\t\t\tGUI:Spacing( )\n\t\t\tGUI:Separator( )\n\t\t\tGUI:Spacing( )\n\t\t\t\n\t\t\tGUI:Bullet()\n\t\t\tGUI:TextColored(0.5,1,0,1,\"Latest news: \"..AnyoneCore.news)\n\t\t\t\n\t\t\tGUI:Bullet()\n\t\t\tGUI:TextColored(1,1,0,1,\"Current AnyoneCore Version: \".. tostring(AnyoneCore.version))\n\t\t\tif AnyoneCore.Data.gitVersion ~= nil then\n\t\t\t\tGUI:Bullet()\n\t\t\t\tGUI:TextColored(1,1,0,1,\"Latest GitHub Release Version: \".. tostring(AnyoneCore.Data.gitVersion))\n\t\t\t\tif AnyoneCore.version < AnyoneCore.Data.gitVersion then\n\t\t\t\t\tAnyoneCore.Data.checkStatus = \"New version available!\"\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif AnyoneCore.Data.checkStatus ~= nil then\n\t\t\tGUI:TextColored(0,1,0,1,AnyoneCore.Data.checkStatus)\n\t\t\tend\n\n\t\t\t--[[local file = io.open(tostring(GetLuaModsPath())..\"TensorReactions/AnyoneCore/data/status.txt\")\n\t\t\tif file ~= nil then AnyoneCore.Data.changelog = file:read(\"*all\") end\n\t\t\tfile:close()]]--\n\t\t\t\n\t\t\tif GUI:Button(\"Check for updates\") then updater(1) end\n\t\t\t\n\t\t\tGUI:SameLine()\n\t\t\tif GUI:BeginPopupModal(\"Download Updates\", true, GUI.WindowFlags_NoScrollbar + GUI.WindowFlags_NoScrollWithMouse + GUI.WindowFlags_NoCollapse + GUI.WindowFlags_NoSavedSettings) then\n\t\t\t\tGUI:PushTextWrapPos(500)\n\t\t\t\tGUI:Text(\"If you have a personally edited timeline, back it up or change the file name now or it'll be overwritten by the updater.\\n\")\n\t\t\t\tGUI:TextColored(1,1,0,1,\"A backup of your files will be created in LuaMods/TensorReactionsBackup.\\n\") \n\t\t\t\tGUI:TextColored(1,0,0,1,\"Warning: if any of the folders leading up to your LuaMods folder has a space in it's name, AnyoneCore updater will not work.\\n\")\n\t\t\t\tif GUI:Button(\"Yes\") then updater(2) GUI:CloseCurrentPopup() end \n\t\t\t\tGUI:SameLine()\n\t\t\t\tif GUI:Button(\"No\") then GUI:CloseCurrentPopup() end\n\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\tGUI:EndPopup()\n\t\t\tend\n\t\t\tif GUI:Button(\"Update to newest release\") then GUI:OpenPopup(\"Download Updates\") end\n\n\t\t\tlocal hovered = false\n\t\t\tAnyoneCore.Settings.WarnForUpdate, changed = GUI:Checkbox(\"Automatically check for new updates\", AnyoneCore.Settings.WarnForUpdate)\n\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\tif hovered then\n\t\t\t\tGUI:BeginTooltip()\n\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\tGUI:Text(\"Sends you a client-sided green colored chat message upon starting up if there's a new update available.\\n\")\n\t\t\t\tGUI:TextColored(1,1,0,1,\"Checks for a new update every 15 minutes.\\n\")\n\t\t\t\tGUI:TextColored(1,0,0,1,\"Be careful not to include your chat in any screenshots if you have this setting enabled.\\n\")\n\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\tGUI:EndTooltip()\n\t\t\tend\n\t\t\t\n\t\t\tlocal hovered = false\n\t\t\tAnyoneCore.Settings.AutomaticUpdater, changed = GUI:Checkbox(\"Automatically download new updates when available\", AnyoneCore.Settings.AutomaticUpdater)\n\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\tif hovered then\n\t\t\t\tGUI:BeginTooltip()\n\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\tGUI:Text(\"If a new update is available, it will be automatically downloaded and applied as soon as it's available. Your current files will be backed up in LuaMods/TensorReactionsBackup.\\n\")\n\t\t\t\tGUI:TextColored(1,1,0,1,\"A green colored chat message will be sent to chat that a new update has been downloaded.\")\n\t\t\t\tGUI:TextColored(1,0,0,1,\"If you have personally edited reactions, then you NEED to rename the files. As long as they aren't the same name, they won't be replaced.\\n\")\n\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\tGUI:EndTooltip()\n\t\t\tend\n\t\telseif (tabname == GetString(\"Helpers\")) then\n\t\t\tif (GUI:CollapsingHeader(\"Prepull Helper\")) then\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.PrepullHelper, changed = GUI:Checkbox(\"Enable Prepull Helper\", AnyoneCore.Settings.PrepullHelper)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Helps with pre-pull before you start the boss fight.\\n\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Careful if you've got a trigger happy team. If this is enabled and you're AFK, your team will be really confused how you were attacking the boss while AFK.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\t\tif (Player.job == 23 or Player.job == 31 or Player.job == 38) then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.PrepullHelperPeloton, changed = GUI:Checkbox(\"Use Peloton in Prepull\", AnyoneCore.Settings.PrepullHelperPeloton)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Enables the use of Peloton during prepull helper.\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Could turn it off if you feel like your team thinks you're too dumb to be using peloton in prepull. LUL\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\t\t\t\n\t\t\t\tend ---end of job check\n\t\t\t\tif Player.job == 22 then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.PrepullBackflip, changed = GUI:Checkbox(\"Use Backflip in Prepull\", AnyoneCore.Settings.PrepullBackflip)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Uses Elusive Jump to get to the boss at the end of the countdown.\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Line yourself up to backflip into max attack range of the boss, and not inside the bosses actual hitbox. Otherwise you will pull too early.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tif Player.job == 19 then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.PrepullDivineVeil, changed = GUI:Checkbox(\"Use Divine Veil in Prepull\", AnyoneCore.Settings.PrepullDivineVeil)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Pops divine veil in prepull for healers to trigger and mitigate tankbusters in the first 30 seconds of the fight.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tif Player.job == 21 or Player.job == 19 or Player.job == 32 or Player.job == 37 or Player.job == 22 or Player.job == 34 or Player.job == 30 or Player.job == 20 then -- check for melee\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.PrepullSprint, changed = GUI:Checkbox(\"Use Sprint in Prepull\", AnyoneCore.Settings.PrepullSprint)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Pops sprint during prepull. Only works on melee jobs.\\n\\nMight be bad if you need to pop sprint early in the fight, like in e5s or e8s.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tif Player.job == 27 then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.PrepullPlacePet, changed = GUI:Checkbox(\"Place pet on boss in Prepull\", AnyoneCore.Settings.PrepullPlacePet)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Places your pet on top of the boss after countdown starts.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\tGUI:SameLine()\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.PrepullAetherpact, changed = GUI:Checkbox(\"Use Prepull Aetherpact\", AnyoneCore.Settings.PrepullAetherpact)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Allows for a bit of a tricky play with moving your pet around to avoid casting Aetherpact but still ticks the cooldown down. For now, Prepull Helper will only do this if you're in e8s since it's the only fight where it's viable.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tlocal hovered = false\n\t\t\t\tGUI:PushItemWidth(80)\n\t\t\t\tAnyoneCore.Settings.BadTeamDelay, changed = GUI:InputInt(\"# of milliseconds to pull early\", AnyoneCore.Settings.BadTeamDelay)\n\t\t\t\tif changed then AnyoneCore.ValidInput() end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Let's face it, most people don't pull on time. Sometimes people will even pull up to a full second early. Change this to make prepull helper pull the boss earlier if your team is consistently pulling early.\\n\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Based on milliseconds. Putting this to 200 means it will pull 200 milliseconds before the countdown ends.\")\n\t\t\t\t\tGUI:TextColored(1,0,0,1,\"You usually want this setting to be about 200 to 300 milliseconds by default since most teams will never pull exactly on time.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\t\tGUI:PopItemWidth( )\n\t\t\tend\n\t\t\tif (GUI:CollapsingHeader(\"Face Away Helper\")) then\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.FaceAwayEnabler, changed = GUI:Checkbox(\"Enable Face Away Helper\", AnyoneCore.Settings.FaceAwayEnabler)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:TextColored(0.50,0.50,0,1,\"A huge thank you to Dedodedo from Rikudou's discord who created Face Away Helper. All I did was clean it up, add a few more options and put it in AnyoneCore. Send dedodedo#5099 all of your love.\")\n\t\t\t\t\tGUI:Text(\"Enables Face Away Helper, which will help you keep casting spells while actively avoiding looking at the boss for look away mechanics.\\n\\nThis works for any job, but works especially well with casters, and samurai.\")\n\t\t\t\t\tGUI:TextColored(1,0,0,1,\"[Warning]\")\n\t\t\t\t\tGUI:TextColored(1,0.10,0,1,\"Do not stand inside the bosses hitbox during the look away mechanics.\\n\\nDo not hold any mouse keys while Face Away Helper is doing it's thing.\\n\\nTry not to move while Face Away helper is doing it's thing.\\n\\nNo, this will not work for Shiva's mirror mechanics. \")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\t\t\t\t\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.UseKeybind, changed = GUI:Checkbox(\"Use a keybind to set facing\", AnyoneCore.Settings.UseKeybind)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Allows you to use Face Away Helper entirely by yourself through use of a keybind. The keybind can be set to any key, but unfortunately not multiple keys at once.\\n\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif AnyoneCore.Settings.UseKeybind == true then\n\t\t\t\t\tGUI:SameLine()\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.Keybind, changed = GUI:Keybind(\"\", AnyoneCore.Settings.Keybind, 40)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Press any key to set as the keybind to use Face Away.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.UseFaceAwayReactions, changed = GUI:Checkbox(\"Enable the usage of reactions to activate Face Away automatically\", AnyoneCore.Settings.UseFaceAwayReactions)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Face Away helper can also be used automatically through the use of reactions, you could even call it yourself by putting 'FaceAway.FaceAway = true' in a LUA reaction.\\n\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.DrawFaceAway, changed = GUI:Checkbox(\"Draw Face Away safe zone using Argus\", AnyoneCore.Settings.DrawFaceAway)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"If the user owns Argus, Face Away can be drawn, it'll show the danger zone where an eye effect would affect you, and then a safe zone where you can effectively cast spells without interruption and not get affected.\\n\")\n\t\t\t\t\tGUI:TextColored(1,0,0,1,\"[Warning]\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"On non-Tensor jobs while using TensorDrift, this draw can look fairly wonky and will show you looking directly at the boss. But this isn't the case, it's just how TensorDrift works. You'll still be safe.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif AnyoneCore.Settings.DrawFaceAway == true then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DrawFaceAwayNoReactions, changed = GUI:Checkbox(\"Don't draw reactions-based Face Away\", AnyoneCore.Settings.DrawFaceAwayNoReactions)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Makes it so the draws for using a keybind still show up, but not when done through reactions.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif (GUI:CollapsingHeader(\"Duty Helper\")) then\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.DutyHelper, changed = GUI:Checkbox(\"Enable Duty Helper\", AnyoneCore.Settings.DutyHelper)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Enables a multitude of features that help in dungeons. Automatic usage of mitigation like Tactician and Troubador. Automatic usage of Arm's Length, and Head Graze.\\n\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Not meant to be turned on for fights that have a timeline. The features will likely interfere with each other. Any features after this one won't work unless this setting is enabled.\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Only Stormblood and beyond content is supported.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.DutyHelperTargeting, changed = GUI:Checkbox(\"Always target something\", AnyoneCore.Settings.DutyHelperTargeting)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Helps with retargeting the boss or mobs in a dungeon. If you don't have a current target, while in combat and bot is enabled, then target nearest monster.\\n\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Works regardless of timelines. Duty Helper must be enabled.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.DutyHelperMitigation, changed = GUI:Checkbox(\"Mitigation usage\", AnyoneCore.Settings.DutyHelperMitigation)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Enables spells like tactician/troubador/shield samba to be used alongside Duty Helper to mitigate incoming damage.\\n\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Works regardless of timelines. Duty Helper must be enabled.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif Player.job == 32 or Player.job == 37 or Player.job == 19 or Player.job == 21 then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DutyHelperGrabAggro, changed = GUI:Checkbox(\"Aggro management in dungeons\", AnyoneCore.Settings.DutyHelperGrabAggro)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Helps regain aggro on mobs that you've lost aggro on. Will not work in 8/24 man raids, on purpose.\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Works regardless of timelines. Duty Helper must be enabled.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.DutyHelperInterrupt, changed = GUI:Checkbox(\"Automatically interrupt casts\", AnyoneCore.Settings.DutyHelperInterrupt)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Interrupts stuff that is interruptable in duties.\\n\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Works regardless of timelines. Duty Helper must be enabled.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.DutyHelperKnockback, changed = GUI:Checkbox(\"Use anti-knockback spells\", AnyoneCore.Settings.DutyHelperKnockback)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Uses arm's length or surecast when applicable.\\n\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Works regardless of timelines. Duty Helper must be enabled.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\tend\n\t\t\n\t\telseif (tabname == GetString(\"Reactions\")) then\n\t\t\n\t\t\tAnyoneCore.Settings.HideUnrelatedJobs, changed = GUI:Checkbox(\"Show only options available to my job\", AnyoneCore.Settings.HideUnrelatedJobs)\n\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\n\t\t\tif (GUI:CollapsingHeader(\"Eden's Verse settings\")) then\n\t\t\t\tGUI:Dummy(10,0) GUI:SameLine(0,0)\n\t\t\t\tif (GUI:CollapsingHeader(\"e5s settings\", GUI.TreeNodeFlags_Bullet)) then\n\t\t\t\t\tGUI:Text(\"No settings available for e5s :(\")\n\t\t\t\tend\n\t\t\t\tGUI:Dummy(10,0) GUI:SameLine(0,0)\n\t\t\t\tif (GUI:CollapsingHeader(\"e6s settings\", GUI.TreeNodeFlags_Bullet)) then\n\t\t\t\t\tif Player.job == 34 or AnyoneCore.Settings.HideUnrelatedJobs == false then\n\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\tAnyoneCore.Settings.AttackingGaruda, changed = GUI:Checkbox(\"Attack Garuda during split phase\", AnyoneCore.Settings.AttackingGaruda)\n\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\tGUI:Text(\"Only enable if you're specifically attacking garuda during the e6s split phase. If enabled, will not waste the time re-applying Higanbana to ifrit if it won't last long enough to be worth it.\\n\")\n\t\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Only matters if you're using my e6s timeline.\")\n\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\t\tif Player.job == 31 or Player.job == 23 or Player.job == 38 or AnyoneCore.Settings.HideUnrelatedJobs == false then ---brd/mch/dnc\n\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\tAnyoneCore.Settings.NorthStratMitigation, changed = GUI:Checkbox(\"Mitigate Strike Spark\", AnyoneCore.Settings.NorthStratMitigation)\n\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\tGUI:Text(\"Uses rdps mitigation before Strike Spark.\")\n\t\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Sometimes teams will choose to go north for Strike Spark for the sake of melee uptime. Since there's a lot of outgoing damage here, it's usually a good idea to use rdps mitigations. So enable this to throw out tactician/shield samba/troubador before strike spark.\")\n\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\t\tif (Player.job ~= 34 and Player.job ~= 23 and Player.job ~= 31 and Player.job ~= 38) or AnyoneCore.Settings.HideUnrelatedJobs == false then\n\t\t\t\t\t\tGUI:Text(\"Current job doesn't have any settings for e6s.\\n\")\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tGUI:Dummy(10,0) GUI:SameLine(0,0)\n\t\t\t\tif (GUI:CollapsingHeader(\"e7s settings\", GUI.TreeNodeFlags_Bullet)) then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DisableAssist, changed = GUI:Checkbox(\"Away With Thee safe strat\", AnyoneCore.Settings.DisableAssist)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Disables minion's assist function slightly before Away With Thee teleports go out. Allows you to position yourself correctly without getting mispositioned by a skill usage.\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Alternatively, you can use LMB + RMB + S and then wiggle your camera while facing the correct direction. This will result in much better uptime. Test this on a striking dummy first to get the feel for it.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.AddsPhasePot, changed = GUI:Checkbox(\"Adds phase potion\", AnyoneCore.Settings.AddsPhasePot)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Uses pot during adds phase in e7s immediately after Away With Thee teleport ends. This will allow you to get in a 3rd pot usage if your kill time is over 9 minutes and 30 seconds long.\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Only matters if you're playing machinist, it's disabled otherwise. If your kill time is shorter than 9 minutes and 30 seconds, turn this off.\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Potions still need to be turned on with your quick toggles at the start of the fight for this to work.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tGUI:Dummy(10,0) GUI:SameLine(0,0)\n\t\t\t\tif (GUI:CollapsingHeader(\"e8s settings\", GUI.TreeNodeFlags_Bullet)) then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.KnockbackMirrorUptime, changed = GUI:Checkbox(\"Knockback mirrors uptime strat\", AnyoneCore.Settings.KnockbackMirrorUptime)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Automatically uses Arm's Length or Surecast during knockback mirrors aka Reflected Wings. Will allow you to nullify both knockbacks.\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"If you're getting knocked back still, check the read me for more information on how to modify the timing based on your needs.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\tif AnyoneCore.Settings.KnockbackMirrorUptime == true then\n\t\t\t\t\t\tGUI:SameLine()\n\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\tAnyoneCore.Settings.SaferKnockback, changed = GUI:Checkbox(\"High ping mode\", AnyoneCore.Settings.SaferKnockback)\n\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Primarily for high ping users having issues with this knockback. Makes it so the reaction will disable assist earlier.\")\n\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DiamondFrostUptime, changed = GUI:Checkbox(\"Diamond Frost uptime strat\", AnyoneCore.Settings.DiamondFrostUptime)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Automatically uses Arm's Length or Surecast during Diamond Frost. \\n\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Definitely do not have this enabled if you're not doing this strat.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif Player.job == 31 or Player.job == 23 or Player.job == 38 or AnyoneCore.Settings.HideUnrelatedJobs == false then\n\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\tAnyoneCore.Settings.LeftSide, changed = GUI:Checkbox(\"Left side adds\", AnyoneCore.Settings.LeftSide)\n\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\tGUI:Text(\"Uncheck this if you're on the right side for adds phase. Affects Earthen Aether interrupt order.\\n\")\n\t\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Only matters if you're a ranged dps, it's disabled otherwise.\")\n\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\tend\n\t\t\t\t\t\tif AnyoneCore.Settings.LeftSide == true then\n\t\t\t\t\t\t\tGUI:SameLine()\n\t\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\t\tAnyoneCore.Settings.InterruptSecondAdd, changed = GUI:Checkbox(\"Interrupt the second Earthen Aether instead\", AnyoneCore.Settings.InterruptSecondAdd)\n\t\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\t\tGUI:Text(\"If checked, reactions will interrupt the second Earthen Aether instead of the first. Unchecked, it will interrupt the first.\\n\")\n\t\t\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Only matters if you're on left side.\")\n\t\t\t\t\t\t\t\tGUI:TextColored(2,2,0,2,\"Only matters if you're machinist or bard, it's disabled otherwise.\")\n\t\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend -- end of left side check\n\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\tAnyoneCore.Settings.NewTargetMethod, changed = GUI:Checkbox(\"New adds phase targeting order\", AnyoneCore.Settings.NewTargetMethod)\n\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\tGUI:Text(\"Follows the current pug strats for dealing with adds as a ranged DPS. Disable to get the old method back.\\n\")\n\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\tend\n\t\t\t\t\tend -- end of brd/mch/dnc job check\n\t\t\t\t\tif Player.job == 23 or AnyoneCore.Settings.HideUnrelatedJobs == false then -- check for bard\n\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\tAnyoneCore.Settings.UseCleanse, changed = GUI:Checkbox(\"Cleanse with Warden's Paean\", AnyoneCore.Settings.UseCleanse)\n\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\tGUI:Text(\"Enables usage of Warden's Paean to cleanse debuffs off people.\\n\")\n\t\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"This currently only is applicable to using Paean's to cleanse the tanks during icelit dragonsong in e8s.\")\n\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\tend\n\t\t\t\t\t\tif AnyoneCore.Settings.UseCleanse == true then\n\t\t\t\t\t\t\tGUI:SameLine()\n\t\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\t\tAnyoneCore.Settings.UseCleanseTop, changed = GUI:Checkbox(\"Prioritize top of the party list\", AnyoneCore.Settings.UseCleanseTop)\n\t\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\t\tGUI:Text(\"Warden's Paean will prioritize the person on the top of the party list. This usually means the first tank on your party list.\\n\")\n\t\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif (GUI:CollapsingHeader(\"Ultimate settings\")) then\n\t\t\t\tGUI:Dummy(10,0) GUI:SameLine(0,0)\n\t\t\t\tif (GUI:CollapsingHeader(\"UCoB settings\", GUI.TreeNodeFlags_Bullet)) then\n\t\t\t\t\tGUI:Text(\"no settings right now :(\")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tGUI:Dummy(10,0) GUI:SameLine(0,0)\n\t\t\t\tif (GUI:CollapsingHeader(\"UwU settings\", GUI.TreeNodeFlags_Bullet)) then\n\t\t\t\t\tGUI:Text(\"no settings right now :(\")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tGUI:Dummy(10,0) GUI:SameLine(0,0)\n\t\t\t\tif (GUI:CollapsingHeader(\"TEA settings\", GUI.TreeNodeFlags_Bullet)) then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.TargetDolls, changed = GUI:Checkbox(\"Automatically target dolls\", AnyoneCore.Settings.TargetDolls)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Targets the dolls when they spawn\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Could cause an issue if your positioning is weird, turn it off if it's not consistent..\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\tif Player.job == 23 or AnyoneCore.Settings.HideUnrelatedJobs == false then\n\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\tAnyoneCore.Settings.ForceApexDolls, changed = GUI:Checkbox(\"Force Apex Arrow on LL during dolls if gauge is full\", AnyoneCore.Settings.ForceApexDolls)\n\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\tGUI:Text(\"If your gauge fills up in the middle of dolls, it'll dump Apex Arrow on living liquid to avoid a dps loss of needing to hold it. Will only be used if your own doll's HP is above 60 percent to avoid killing it.\\n\")\n\t\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Could accidentally kill another player's doll if it's in the way.\")\n\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\t\tif Player.job == 38 or AnyoneCore.Settings.HideUnrelatedJobs == false then\n\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\tAnyoneCore.Settings.DontDisableStandardDolls, changed = GUI:Checkbox(\"Don't disable Standard Step during dolls\", AnyoneCore.Settings.DontDisableStandardDolls)\n\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\tGUI:Text(\"The safe strat is to disable Standard Step during Jagd Dolls, otherwise you might kill the 3rd feed doll. Keeping it enabled pads DPS, but you will need to communicate this with your teammates, or position properly to not hit the 3rd/4th feed doll.\\n\")\n\t\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Could accidentally kill another player's doll if it's in the way.\")\n\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\t\tif Player.job == 23 or AnyoneCore.Settings.HideUnrelatedJobs == false then -- check for bard\n\t\t\t\tif (GUI:CollapsingHeader(\"Bard settings\")) then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.SongEntityCount, changed = GUI:Checkbox(\"Show number of people affected by songs\", AnyoneCore.Settings.SongEntityCount)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Creates a small window that counts the number of people that have your songs\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Doesn't work if there are more than one bard in your party, it'll just count every single instance of the buff.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tif Player.job == 38 or AnyoneCore.Settings.HideUnrelatedJobs == false then -- check for dancer\n\t\t\t\tif (GUI:CollapsingHeader(\"Dancer settings\")) then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.AutoPartner, changed = GUI:Checkbox(\"Automatically set partner\", AnyoneCore.Settings.AutoPartner)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"If entering into a raid or dungeon and player doesn't have a dance partner, reactions will turn on 'auto partner' in SallyDNC and then turn it back off.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif Player.job == 31 or AnyoneCore.Settings.HideUnrelatedJobs == false then -- check for machinist\n\t\t\t\tif (GUI:CollapsingHeader(\"Machinist settings\")) then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.AntiGhosting, changed = GUI:Checkbox(\"Anti-ghosting tech\", AnyoneCore.Settings.AntiGhosting)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Sometimes if your ping is too high and you cast a skill right as the boss is going away, the skill will be used but it will deal no damage. But if you use a skill that generates gauge, you will gain that gauge but not deal any damage. So we can disable drill shortly before a phase transition to use a gauge skill instead.\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"You can disable this if you have a fairly low ping, like under 30 ping. If your drills are still getting used but dealing no damage, you can just turn it back on.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tGUI:PushItemWidth(80)\n\t\t\t\t\tif AnyoneCore.Data.preview == nil then\n\t\t\t\t\t\tAnyoneCore.Data.preview = AnyoneCore.Settings.QueenGauge[1].name\n\t\t\t\t\tend\n\t\t\t\t\tif GUI:BeginCombo(\"##queengauge\",AnyoneCore.Data.preview,GUI.ComboFlags_HeightRegular) then\n\t\t\t\t\t\tfor k,v in pairs(AnyoneCore.Settings.QueenGauge) do\n\t\t\t\t\t\t\tlocal values = v.name\n\t\t\t\t\t\t\tlocal isselected = AnyoneCore.Data.preview == values\n\t\t\t\t\t\t\tlocal selected,changed = GUI:Selectable(values,isselected)\n\t\t\t\t\t\t\tif selected and AnyoneCore.Settings.selected ~= values then\n\t\t\t\t\t\t\t\tAnyoneCore.Data.preview = values\n\t\t\t\t\t\t\t\tAnyoneCore.Data.selected = k\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\t\tGUI:EndCombo()\n\t\t\t\t\tend\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tGUI:PopItemWidth()\n\t\t\t\t\tGUI:SameLine()\n\n\t\t\t\t\tGUI:PushItemWidth(70)\n\t\t\t\t\tAnyoneCore.Settings.QueenGauge[AnyoneCore.Data.selected].gauge, changed = GUI:InputInt(\"Automatically set queen usage in ACR\", AnyoneCore.Settings.QueenGauge[AnyoneCore.Data.selected].gauge)\n\t\t\t\t\tif changed then AnyoneCore.ValidInput() end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Changes when your Summon Queen is used in TensorMagnum settings when you start this fight.\\n\\nAlternatively works for rook turret if in level 70 or below content.\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"The 'other' option is for setting your queen gauge everywhere other than what can be selected on the list.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend -- end of machinist job check\n\t\t\tif Player.job == 21 or Player.job == 19 or Player.job == 32 or Player.job == 37 or Player.job == 22 or Player.job == 34 or Player.job == 30 or Player.job == 20 or AnyoneCore.Settings.HideUnrelatedJobs == false then -- check for melee\n\t\t\t\tif (GUI:CollapsingHeader(\"Melee settings\")) then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.NeverDash, changed = GUI:Checkbox(\"Never dash for me\", AnyoneCore.Settings.NeverDash)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Enabling this will make it so reactions will never dash in for you. Dashes are mostly done after mechanics end when it's safe to do so, but could be annoying for teams with weird uptime strats.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\tif (Player.job ~= 34 and Player.job ~= 30) or AnyoneCore.Settings.HideUnrelatedJobs == false then\n\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\tAnyoneCore.Settings.SafeDashing, changed = GUI:Checkbox(\"Safe Jumps/Dashing with Argus\", AnyoneCore.Settings.SafeDashing)\n\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\tGUI:Text(\"Enabling this will use Argus to detect if it's safe to jump or dash to a target. If not, jumping/dashing will be disabled.\\n\")\n\t\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Could possibly cause drift in jobs like Dragoon, but that's the price of safety I guess.\")\n\t\t\t\t\t\t\tGUI:TextColored(1,0,0,1,\"This will take total control of your jumps/dash toggle, making you unable to change it yourself. Reactions will override this.\")\n\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\tend\n\t\t\t\t\t\tif AnyoneCore.Settings.SafeDashing == true then\n\t\t\t\t\t\t\tGUI:SameLine()\n\t\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\t\tAnyoneCore.Settings.SafeInstanceOnly, changed = GUI:Checkbox(\"Instance Only\", AnyoneCore.Settings.SafeInstanceOnly)\n\t\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\t\tGUI:Text(\"Safe dashing will only apply while inside an instance.\\n\")\n\t\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif (GUI:CollapsingHeader(\"Argus settings\")) then\n\t\t\t\tif Argus ~= nil or AnyoneCore.Settings.HideUnrelatedJobs == false then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DrawClouds, changed = GUI:Checkbox(\"e5s - Draw Stormcloud AoE radius\", AnyoneCore.Settings.DrawClouds)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Draws a circle on the floor to show you the area where you'll get hit by the Chaos Strikes to cleanse lightning debuffs.\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,0,0,1,\"Bugs out badly if clouds combine.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DrawChainLightning, changed = GUI:Checkbox(\"e5s - Draw Chain Lightning AoE size\", AnyoneCore.Settings.DrawChainLightning)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Draws a circle around whoever has the Electrified debuff in e5s. Technically the AoE comes from the person it's passed to, but the circle should give you an idea of how far away you should be.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DrawOccludedFrontOrbs, changed = GUI:Checkbox(\"e6s - Draw Occluded Front orb explosions\", AnyoneCore.Settings.DrawOccludedFrontOrbs)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Draws a circle around the orbs that spawn after Occluded Front during Garuda and Garuda/Ifrit phase.\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,0,0,1,\"Standing in the safe spot is not enough to be safe still unfortunately, you still need to make sure you won't be knocked into the orb.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DrawBlackWhiteOrbs, changed = GUI:Checkbox(\"e7s - Draw black/white orbs\", AnyoneCore.Settings.DrawBlackWhiteOrbs)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Draws the explosion radius of the orbs during tornado in e7s.\\n\")\n\t\t\t\t\t\tGUI:TextColored(1,0,0,1,\"Slightly wonky, the orbs take a while to disappear and take a while to appear.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DrawDragonHeads, changed = GUI:Checkbox(\"e8s - Draw dragon heads\", AnyoneCore.Settings.DrawDragonHeads)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Draws the explosion radius of the dragon heads during Wyrm's Lament in e8s.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DrawOrbs, changed = GUI:Checkbox(\"e8s - Draw Light Rampant Orbs\", AnyoneCore.Settings.DrawOrbs)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Draws the explosion radius of the orbs during Light's Rampant in e8s.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DrawNaelQuotes, changed = GUI:Checkbox(\"UCoB - All drawing mechanics\", AnyoneCore.Settings.DrawNaelQuotes)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Toggles all of the draws in UCoB, there's like 40 so there's only this one option. Draws EVERY Nael Quote, Earthshaker Cones, twisters/twisting dives and people with Thunderstruck debuff.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.DrawNaelQuotes, changed = GUI:Checkbox(\"UwU - All drawing mechanics\", AnyoneCore.Settings.DrawNaelQuotes)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Toggles all of the draws in UwU, there's quite a few so there's only this one option. Draws wicked wheel/tornado, draws nail positions, draws the edge of the arena, and a bunch more.\\n\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif Player.job == 34 or AnyoneCore.Settings.HideUnrelatedJobs == false then\n\t\t\t\t\t\tlocal hovered = false\n\t\t\t\t\t\tAnyoneCore.Settings.DrawYaten, changed = GUI:Checkbox(\"SAM - Draw Yaten distance\", AnyoneCore.Settings.DrawYaten)\n\t\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\t\tif hovered then\n\t\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\t\tGUI:Text(\"If Yaten is enabled on the ACR, Argus will draw the distance behind you that Yaten will backstep.\\n\")\n\t\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\td(\"Argus is not installed.\")\n\t\t\t\tend\n\t\t\tend\n\t\t\tif (GUI:CollapsingHeader(\"Misc settings\")) then\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.UseSprint, changed = GUI:Checkbox(\"Use Sprint\", AnyoneCore.Settings.UseSprint)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Enables reactions to use sprint for you.\\n\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Only works if you're using one of my timelines.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.UseMoogleTTS, changed = GUI:Checkbox(\"Use Moogle TTS or chat messages to send me warnings\", AnyoneCore.Settings.UseMoogleTTS)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"If you have MoogleTTS, it'll use TTS to remind you. Otherwise it'll remind you using a colored chat message along with a se.1 ping. \\n\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"MoogleTTS has to be installed to use the TTS option, if it's not installed will automatically do it the alternative way.\")\n\t\t\t\t\tGUI:TextColored(1,0,0,1,\"If you're streaming or recording, the sound will show up on the stream, and if you're not using MoogleTTS, the chat message could be seen by other people.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.CheckJob, changed = GUI:Checkbox(\"Warn me if I'm using the wrong profile\", AnyoneCore.Settings.CheckJob)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Everytime you change map or wipe to a boss fight, AnyoneCore will check if you're currently loaded on the wrong profile for both General and Timeline triggers.\\n\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"If you're on the wrong profile, a yellow colored message will be sent to chat warning you about it.\")\n\t\t\t\t\tGUI:TextColored(0,1,0,1,\"If you use your own personal timeline or general triggers profile, I'd recommend turning this setting off since it'll go off.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.CheckFood, changed = GUI:Checkbox(\"Warn me if I'm missing food buff\", AnyoneCore.Settings.CheckFood)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Sends a message to chat if the player is missing food buff during Prepull Helper.\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Warning: this chat message can be seen in screenshots or while streaming. But it's client-sided so other players cannot see it.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\n\t\t\t\tif AnyoneCore.Settings.CheckFood == true then\n\t\t\t\t\tlocal hovered = false\n\t\t\t\t\tAnyoneCore.Settings.CheckFoodDuration, changed = GUI:Checkbox(\"Check if food duration is lower than\", AnyoneCore.Settings.CheckFoodDuration)\n\t\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tGUI:SameLine()\n\t\t\t\t\tGUI:PushItemWidth(70)\n\t\t\t\t\tAnyoneCore.Settings.CheckFoodDurationValue, changed = GUI:InputInt(\"minutes remaining\", AnyoneCore.Settings.CheckFoodDurationValue)\n\t\t\t\t\tif changed then AnyoneCore.ValidInput() end\n\t\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\t\tif hovered then\n\t\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\t\tGUI:Text(\"Additionally, if food buff has under set amount of minutes remaining, send a warning.\")\n\t\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Warning: this chat message can be seen in screenshots or while streaming.\")\n\t\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tend\n\t\t\t\t\tGUI:PopItemWidth()\n\t\t\t\tend\n\n\t\t\t\tlocal hovered = false\n\t\t\t\tAnyoneCore.Settings.PotionOverride, changed = GUI:Checkbox(\"Always re-enable potions override\", AnyoneCore.Settings.PotionOverride)\n\t\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tGUI:SameLine() GUI:TextColored(1,0,0,1,\"[CAUTION]\")\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Instead of checking if you had potions enabled from the previous pull, potions will just always get re-enabled after a wipe, no matter what. Helps for people who are forgetful I guess.\\n\")\n\t\t\t\t\tGUI:TextColored(1,0,0,1,\"Please note that this means it will get enabled even on map changes and in dungeons. This could easily end up wasting a ton of pots if you forget you had this enabled, so don't say I didn't warn you.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\tend\n\t\t\n\t\telseif (tabname == GetString(\"Extra\")) then\n\t\t\n\t\t\tif GUI:BeginPopupModal(\"Download Qwert's Reactions\", true, GUI.WindowFlags_NoScrollbar + GUI.WindowFlags_NoScrollWithMouse + GUI.WindowFlags_NoCollapse + GUI.WindowFlags_NoSavedSettings) then\n\t\t\t\tGUI:PushTextWrapPos(500)\n\t\t\t\tGUI:Text(\"If you have a personally edited timeline, back it up or change the file name now or it'll be overwritten by the updater.\\n\")\n\t\t\t\tGUI:TextColored(1,1,0,1,\"A backup of your files will be created in LuaMods/TensorReactionsBackup.\\n\") \n\t\t\t\tGUI:TextColored(1,0,0,1,\"Warning: if any of the folders leading up to your LuaMods folder has a space in it's name, AnyoneCore updater will not work.\\n\")\n\t\t\t\tif GUI:Button(\"Yes\") then updater(3) GUI:CloseCurrentPopup() end \n\t\t\t\tGUI:SameLine()\n\t\t\t\tif GUI:Button(\"No\") then GUI:CloseCurrentPopup() end\n\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\tGUI:EndPopup()\n\t\t\tend\n\t\t\t\n\t\t\tif GUI:Button(\"Update Qwert's reactions\") then GUI:OpenPopup(\"Download Qwert's Reactions\") end\n\t\t\t\n\t\t\tGUI:Spacing( )\n\t\t\tGUI:Separator( )\n\t\t\tGUI:Spacing( ) \n\t\t\n\t\t\tlocal hovered = false\n\t\t\tAnyoneCore.Settings.MiniReactionsTimer, changed = GUI:Checkbox(\"Mini Reactions Timer\", AnyoneCore.Settings.MiniReactionsTimer)\n\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\tif hovered then\n\t\t\t\tGUI:BeginTooltip()\n\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\tGUI:Text(\"Adds a miniature version of the reactions timer you would normally find in the TensorReactions debug tab.\\n\")\n\t\t\t\tGUI:TextColored(1,1,0,1,\"Pretty much only helpful for planning and debugging. Nice to have something small and easy to stuff in the corner of your screen.\")\n\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\tGUI:EndTooltip()\n\t\t\tend\n\t\t\t\n\t\t\tlocal hovered = false\n\t\t\tAnyoneCore.Settings.AlwaysMini, changed = GUI:Checkbox(\"Always change bot menu to mini mode on startup\", AnyoneCore.Settings.AlwaysMini)\n\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\tif hovered then\n\t\t\t\tGUI:BeginTooltip()\n\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\tGUI:Text(\"This is referring to the bot menu where you enable and disable assist. Enabling this means that on startup, that menu will always be put into the small version that you get when you press the arrow in the top right corner. \\n\")\n\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\tGUI:EndTooltip()\n\t\t\tend\n\n\t\t\tlocal hovered = false\n\t\t\tGUI:PushItemWidth(35)\n\t\t\tDebugLevels = {1,2,3}\n\t\t\tif GUI:BeginCombo(\"##queengauge\",AnyoneCore.Settings.DebugLevel,GUI.ComboFlags_HeightRegular) then\n\t\t\t\tfor k,v in pairs(DebugLevels) do\n\t\t\t\t\tlocal values = v\n\t\t\t\t\tlocal isselected = AnyoneCore.Settings.DebugLevel == values\n\t\t\t\t\tlocal selected,changed = GUI:Selectable(values,isselected)\n\t\t\t\t\tif selected and AnyoneCore.Settings.DebugLevel ~= values then\n\t\t\t\t\t\tAnyoneCore.Settings.DebugLevel = values\n\t\t\t\t\t\tAnyoneCore.save(true)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tGUI:EndCombo()\n\t\t\tend\n\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\tGUI:PopItemWidth()\n\t\t\tGUI:SameLine() GUI:Text(\"Debug level\")\n\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\tif hovered then\n\t\t\t\tGUI:BeginTooltip()\n\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\tGUI:Text(\"1: Minimal level of debug messages sent to console.\\n\\n2: Decent amount of debug messages that will accurately describe what AnyoneCore is up to.\\n\\n3: All debug messages will be logged in MinionPath/TensorReactions/AnyoneCore/Logs.\")\n\t\t\t\tGUI:TextColored(1,1,0,1,\"Logs can be deleted freely if there are no issues. But if you're having an issue, you'll likely be asked for the log.\")\n\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\tGUI:EndTooltip()\n\t\t\tend\n\n\t\t\tlocal hovered = false\n\t\t\tif GUI:Button(\"Generate debug log\") then AnyoneCore.debug() end\n\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\tif hovered then\n\t\t\t\tGUI:BeginTooltip()\n\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\tGUI:Text(\"If you're having issues, press this button and send the file generated to Anyone#9549 on discord.\")\n\t\t\t\tGUI:TextColored(1,1,0,1,\"Generated log will be saved in: \"..GetLuaModsPath()..\"\\\\TensorReactions\\\\AnyoneCore\\\\Logs and will have 'Debugging_' at the start of the file name.\")\n\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\tGUI:EndTooltip()\n\t\t\tend\n\n\t\t\tGUI:Spacing( )\n\t\t\tGUI:Separator( )\n\t\t\tGUI:Spacing( ) \n\t\t\t\n\t\t\tlocal hovered = false\n\t\t\tAnyoneCore.Settings.AutoSetSpeedHacks, changed = GUI:Checkbox(\"Automatically set speed hacks\", AnyoneCore.Settings.AutoSetSpeedHacks)\n\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\tif hovered then\n\t\t\t\tGUI:BeginTooltip()\n\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\tGUI:Text(\"Sets your character speed to 7 (default is 6.0) at the start of a fight. Changes it back upon wiping. Approximately 15 percent faster walking speed.\\n\")\n\t\t\t\tGUI:TextColored(1,0,0,1,\"Changing the speed is safe detection-wise FOR NOW, but someone can report you. It could be especially dangerous if someone spots you running slightly faster than the rest of the group and saves a video of you doing so. In that case, it is dangerous to use, so use at your own discretion.\")\n\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\tGUI:EndTooltip()\n\t\t\tend\n\t\t\t\n\t\t\tlocal hovered = false\n\t\t\tAnyoneCore.Settings.AutoSetMaxCameraZoom, changed = GUI:Checkbox(\"Automatically set max camera zoom on startup\", AnyoneCore.Settings.AutoSetMaxCameraZoom)\n\t\t\tif changed then AnyoneCore.save(true) end\n\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\tif hovered then\n\t\t\t\tGUI:BeginTooltip()\n\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\tGUI:Text(\"Changes your maximum camera zoom to 35 upon attaching bot (default is 20). Value can be changed with the input box.\\n\")\n\t\t\t\tGUI:TextColored(1,1,0,1,\"Reload AnyoneCore with the button on the sidebar after enabling to make changes take effect.\")\n\t\t\t\tGUI:TextColored(1,0,0,1,\"Absolutely do not use this while streaming. Be careful taking screenshots too. It is very noticable that your camera is zoomed out more than normal.\")\n\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\tGUI:EndTooltip()\n\t\t\tend\n\t\t\tif AnyoneCore.Settings.AutoSetMaxCameraZoom == true then\n\t\t\t\tGUI:SameLine()\n\t\t\t\tlocal hovered = false\n\t\t\t\tGUI:PushItemWidth(70)\n\t\t\t\tAnyoneCore.Settings.CameraZoomValue, changed = GUI:InputInt(\"\", AnyoneCore.Settings.CameraZoomValue)\n\t\t\t\tif changed then AnyoneCore.ValidInput() end\n\t\t\t\tif not hovered then hovered = GUI:IsItemHovered() end\n\t\t\t\tif hovered then\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(\"Set the value you want your camera zoom to be set to.\\n\")\n\t\t\t\t\tGUI:TextColored(1,1,0,1,\"Reload AnyoneCore with the button on the sidebar after enabling to make changes take effect.\")\n\t\t\t\t\tGUI:TextColored(1,0,0,1,\"Absolutely do not use this while streaming. Be careful taking screenshots too. It is very noticable that your camera is zoomed out more than normal.\")\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\tend\n\t\t\tend\n\n\t\t\n\t\tend -- end of tabs\n\t\t\n\t\t\t--Code and idea for links was shamelessly stolen from Kali. Thank you Kali.\n\t\t\tlocal MinionPath = GetStartupPath()\n\t\t\twinX,winY = GUI:GetWindowSize()\n\t\t\tposX,posY = GUI:GetWindowPos()\n\t\t\tlocal min,max,rate,spacing,padding = 25,50,5,5,0\n\t\t\tlocal windowsize = 25\n\t\t\tfor i=2, #LinksTable do\n\t\t\t\tlocal size = LinksTable[i].size.x\n\t\t\t\tif size and size > 0 and size > windowsize then windowsize = size end\n\t\t\tend\n\t\t\tGUI:PushStyleColor(GUI.Col_WindowBg, 0,0,0,0)\n\t\t\tGUI:SetNextWindowPos(posX-windowsize-spacing,posY + 20,GUI.SetCond_Always)\n\t\t\tGUI:SetNextWindowSize(max,((#LinksTable - 1) * min) + ((#LinksTable - 1) * spacing) + max,GUI.SetCond_Always)\n\t\t\tGUI:PushStyleVar(GUI.StyleVar_WindowPadding,padding,padding)\n\t\t\tGUI:PushStyleVar(GUI.StyleVar_ItemSpacing,spacing,spacing)\n\t\t\tGUI:Begin(\"AnyoneCore##Sidebar\",true,GUI.WindowFlags_NoTitleBar + GUI.WindowFlags_NoResize + GUI.WindowFlags_NoMove + GUI.WindowFlags_NoScrollbar + GUI.WindowFlags_NoScrollWithMouse + GUI.WindowFlags_NoCollapse + GUI.WindowFlags_NoFocusOnAppearing)\n\t\t\tif GUI:IsWindowFocused(\"AnyoneCore##Sidebar\") then GUI:SetWindowFocus(AnyoneCore.name) end\n\t\t\tfor i=2, #LinksTable do\n\t\t\t\tlocal link = LinksTable[i]\n\t\t\t\tGUI:Dummy(windowsize-link.size.x,0) GUI:SameLine(0,0)\n\t\t\t\tGUI:Image(link.icon,link.size.x,link.size.y)\n\t\t\t\tif GUI:IsItemHovered() then\n\t\t\t\t\tGUI:PopStyleVar(2)\n\t\t\t\t\tGUI:BeginTooltip()\n\t\t\t\t\tGUI:PushTextWrapPos(300)\n\t\t\t\t\tGUI:Text(link.tooltip)\n\t\t\t\t\tGUI:PopTextWrapPos()\n\t\t\t\t\tGUI:EndTooltip()\n\t\t\t\t\tGUI:PushStyleVar(GUI.StyleVar_WindowPadding,padding,padding)\n\t\t\t\t\tGUI:PushStyleVar(GUI.StyleVar_ItemSpacing,spacing,spacing)\n\t\t\t\t\tif link.size.x < max then link.size.x = link.size.x + rate end\n\t\t\t\t\tif link.size.y < max then link.size.y = link.size.y + rate end\n\t\t\t\t\tif GUI:IsItemClicked(0) and link.link then\n\t\t\t\t\t\tio.popen([[cmd /c start \"\" \"]]..link.link..[[\"]]):close()\n\t\t\t\t\telseif GUI:IsItemClicked(1) and link.link2 then\n\t\t\t\t\t\tio.popen([[cmd /c start \"\" \"]]..link.link2..[[\"]]):close()\n\t\t\t\t\telseif GUI:IsItemClicked(0) and link.link3 then\n\t\t\t\t\t\tAnyoneCoreReload()\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tif link.size.x > min then link.size.x = link.size.x - rate end\n\t\t\t\t\tif link.size.y > min then link.size.y = link.size.y - rate end\n\t\t\t\tend\n\t\t\tend\n\t\t\tGUI:End()\n\t\t\tGUI:PopStyleColor()\n\t\t\tGUI:PopStyleVar(2)\n\t\t\t\t\n\t\tend\n\t\tGUI:End()\n\t\tGUI:PopStyleColor(c)\n\tend\n\t\n\tif AnyoneCore.Settings.MiniReactionsTimer == true then\n\t\tGUI:Begin(\"AnyoneCore##MiniTimer\", AnyoneCore.Settings.MiniReactionsTimer,GUI.WindowFlags_NoTitleBar + GUI.WindowFlags_NoScrollbar + GUI.WindowFlags_NoScrollWithMouse + GUI.WindowFlags_NoCollapse)\n\t\t\tif TensorReactions_CurrentTimer ~= nil then\n\t\t\t\tGUI:Text(TensorReactions_CurrentTimer)\n\t\t\tend\n\t\tGUI:End()\n\tend\n\t\n\tif AnyoneCore.Settings.SongEntityCount == true and Player.job == 23 then\n\t\tGUI:Begin(\"AnyoneCore##SongEntityCount\", AnyoneCore.Settings.MiniReactionsTimer,GUI.WindowFlags_NoTitleBar + GUI.WindowFlags_NoScrollbar + GUI.WindowFlags_NoScrollWithMouse + GUI.WindowFlags_NoCollapse)\n\t\t\t\n\t\t\tlocal party = TensorCore.getEntityGroupList(\"Party\")\n\t\t\tlocal count = {}\n\t\t\tfor _, ent in pairs(party) do\n\t\t\t\tif TensorCore.hasBuff(ent, 2216, Player) or TensorCore.hasBuff(ent, 2217, Player) or TensorCore.hasBuff(ent, 2218, Player) then\n\t\t\t\t\tcount[#count+1] = ent\n\t\t\t\tend\n\t\t\tend\n\t\t\tlocal r,g\n\t\t\tif table.size(TensorCore.getEntityGroupList(\"Party\")) >= 5 then\n\t\t\t\tif #count <= 1 then\n\t\t\t\tr = 1\n\t\t\t\tg = 0\n\t\t\t\telseif #count <= 3 and #count > 1 then\n\t\t\t\tr = 0.75\n\t\t\t\tg = 0.25\n\t\t\t\telseif #count <= 5 and #count > 3 then\n\t\t\t\tr = 0.5\n\t\t\t\tg = 0.5\n\t\t\t\telseif #count <= 6 and #count > 5 then\n\t\t\t\tr = 0.25\n\t\t\t\tg = 0.75\n\t\t\t\telseif #count >= 7 then\n\t\t\t\tr = 0\n\t\t\t\tg = 1\n\t\t\t\tend\n\t\t\telseif table.size(TensorCore.getEntityGroupList(\"Party\")) <= 4 then\n\t\t\t\tif #count <= 1 then\n\t\t\t\tr = 1\n\t\t\t\tg = 0\n\t\t\t\telseif #count <= 2 and #count > 1 then\n\t\t\t\tr = 0.5\n\t\t\t\tg = 0.5\n\t\t\t\telseif #count <= 3 and #count > 2 then\n\t\t\t\tr = 0\n\t\t\t\tg = 1\n\t\t\t\tend\n\t\t\tend\n\t\t\tif r ~= nil and g ~= nil then\n\t\t\tGUI:SetWindowFontSize(1.5)\n\t\t\tGUI:TextColored(r,g,0,1,#count)\n\t\t\tend\n\t\tGUI:End()\n\tend\n\t\n\tif AnyoneCore.Settings.FaceAwayEnabler == true and FaceAway ~= nil then\n\t\tlocal c = 0\n\t\tlocal WinFlags = (GUI.WindowFlags_NoTitleBar + GUI.WindowFlags_NoResize + GUI.WindowFlags_NoScrollbar + GUI.WindowFlags_NoCollapse)\n\t\tfor k,v in pairs(FaceAway.WindowStyle) do if v[4] ~= 0 then c = c + 1 loadstring([[GUI:PushStyleColor(GUI.Col_]]..k..[[, ]]..(v[1]/255)..[[, ]]..(v[2]/255)..[[, ]]..(v[3]/255)..[[, ]]..v[4]..[[)]])() end end\n\t\tGUI:SetNextWindowSize(60,50,GUI.SetCond_Always)\n\t\tFaceAway.visible, FaceAway.open = GUI:Begin(\"FaceAway\", FaceAway.open, WinFlags)\n\t\tif FaceAway.visible then\n\t\t\tlocal childColorFace\n\t\t\tlocal childColorKeybind\n\t\t\tlocal target = Player:GetTarget()\n\t\t\t-- Some stuff to check if we want to use keybinds or not and if so checks if ctrl is held down\n\t\t\tif AnyoneCore.Settings.UseKeybind == true then\n\t\t\t\tchildColorKeybind = {r = 0, g = .1, b = 0, a = .75}\n\t\t\t\tFaceAway.keybindstatus = \"On\"\n\n\t\t\t\t\tif (GUI:IsKeyDown(AnyoneCore.Settings.Keybind)) == true then\n\t\t\t\t\t\tCtrlIsDown = true\n\t\t\t\t\telse\n\t\t\t\t\t\tCtrlIsDown = false\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\tchildColorKeybind = {r = .1, g = 0, b = 0, a = .75 }\n\t\t\t\tFaceAway.keybindstatus = \"Off\"\n\t\t\tend\n\t\t\t\n\t\t\t\n\t\t\tif (CtrlIsDown == true or FaceAway.FaceAway == true) and target and target.contentid < 30000 then\n\t\t\t\t-- This presses the D key to update our position (https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes?redirectedfrom=MSDN)\n\t\t\t\tPressKey(0x44)\n\n\t\t\t\t-- some color/gui stuff\n\t\t\t\tchildColorFace = {r = 0, g = .1, b = 0, a = .75}\n\t\t\t\tFaceAway.Data.facestatus = \"On\"\n\t\t\t\tFaceAway.FaceAwayKey = true\n\n\t\t\t\t-- stolen stuff from Anyone to get the heading\n\t\t\t\tlocal behind\n\t\t\t\tif FaceAway.Data.ReactionCalled == false then\n\t\t\t\t\tbehind = TensorCore.getHeadingToTarget(Player.pos, target.pos) \n\t\t\t\telse\n\t\t\t\t\tif FaceAway.Data.Entity ~= nil and FaceAway.Data.Entity.type ~= 2 then\n\t\t\t\t\t\tbehind = TensorCore.getHeadingToTarget(Player.pos, FaceAway.Data.Entity.pos)\n\t\t\t\t\telse\n\t\t\t\t\t\tbehind = TensorCore.getHeadingToTarget(Player.pos, target.pos)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t---if ActionList:Get(1, 7526):IsFacing(target.id)\n\t\t\t\tPlayer:SetFacing(behind+math.rad(60))\n\n\t\t\t\t-- turns off legacy control if on, required to actually make the character turn and not move\n\t\t\t\tif gAssistUseLegacy == true then\n\t\t\t\t\tgAssistUseLegacy = false\n\t\t\t\t\tml_global_information.GetMovementInfo(false)\n\t\t\t\t\tFaceAway.Data.LegacyWasOn = true\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tFaceAway.Data.sleep = Now()\n\t\t\t\t\n\t\t\telse\n\t\t\t\tif gAssistUseLegacy == false and FaceAway ~= nil and TimeSince(FaceAway.Data.sleep) >= 100 and FaceAway.Data.LegacyWasOn == true then\n\t\t\t\t\tgAssistUseLegacy = true\n\t\t\t\t\tml_global_information.GetMovementInfo(false)\n\t\t\t\t\tFaceAway.Data.LegacyWasOn = false\n\t\t\t\tend\n\t\t\t\t-- more gui and color stuff\n\t\t\t\tchildColorFace = {r = .1, g = 0, b = 0, a = .75 }\n\t\t\t\tFaceAway.Data.facestatus = \"Off\"\n\t\t\t\tFaceAway.FaceAwayKey = false\n\t\t\tend\n\n\t\t\tGUI:PushStyleVar(GUI.StyleVar_ChildWindowRounding,10)\n\t\t\tGUI:PushStyleColor(GUI.Col_ChildWindowBg, childColorFace.r, childColorFace.g, childColorFace.b, childColorFace.a)\n\t\t\tGUI:BeginChild(\"##extra3\", 40, 35, true)\n\t\t\tGUI:AlignFirstTextHeightToWidgets()\n\t\t\tGUI:Text(FaceAway.Data.facestatus)\n\t\t\tGUI:EndChild()\n\t\t\t-- lets us click it and enable disable it by clicking on the toggle\n\t\t\tif (GUI:IsItemHovered()) then\n\t\t\t\tif (GUI:IsMouseClicked(0)) and target then\n\t\t\t\t\tFaceAway.FaceAway = not FaceAway.FaceAway\n\t\t\t\tend\n\t\t\tend\t\t\t\n\t\t\tGUI:PopStyleColor()\n\t\t\tGUI:PopStyleVar()\n\t\tend\n\t\tGUI:End()\n\t\tGUI:PopStyleColor(c)\n\tend\nend\nAnyoneCore.draw()\nself.eventConditionMismatch = true\nself.used = true",
		executeType = 2,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "AnyoneCore",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "90cbf827-01bd-41d7-8fbe-b7e7e2a34fbd",
	},
	
	{
		actions = 
		{
		},
		conditions = 
		{
		},
		enabled = false,
		eventType = 1,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "         -RESETS-",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "395f07d8-70c4-78c9-bc18-1d59f61d98a1",
	},
	
	{
		actions = 
		{
		},
		conditions = 
		{
		},
		enabled = true,
		eventType = 9,
		execute = "-- Quick Toggles\nACR_TensorMagnum_CD = true\nACR_TensorMagnum_AOE = false\nACR_TensorMagnum_Hypercharge = true\nACR_TensorMagnum_Reassemble = true\nACR_TensorMagnum_SummonQueen = true\nACR_TensorMagnum_WildfireInAOE = true\nACR_TensorMagnum_Flamethrower = false\nACR_TensorMagnum_Drill = true\nACR_TensorMagnum_Bioblaster = true\nACR_TensorMagnum_AirAnchor = true\nACR_TensorMagnum_Peloton = false\nACR_TensorMagnum_HoldGR = false\nACR_TensorMagnum_HoldRico = false\n-- Normal Hotbar\nACR_TensorMagnum_Hotbar_Tactician = false\nACR_TensorMagnum_Hotbar_ArmsLength = false\nACR_TensorMagnum_Hotbar_SummonQueen = false\nACR_TensorMagnum_Hotbar_QueenOverdrive = false\nACR_TensorMagnum_Hotbar_Detonate = false\nACR_TensorMagnum_Hotbar_HeadGraze = false\nACR_TensorMagnum_Hotbar_SecondWind = false\nACR_TensorMagnum_Hotbar_Potion = false\nACR_TensorMagnum_Hotbar_Sprint = false\nACR_TensorMagnum_Hotbar_LimitBreak = false\nACR_TensorMagnum_Hotbar_Flamethrower = false\n-- Safe Hotbar \nACR_TensorMagnum_Hotbar_Tactician_Safe = false\nACR_TensorMagnum_Hotbar_ArmsLength_Safe = false\nACR_TensorMagnum_Hotbar_SummonQueen_Safe = false\nACR_TensorMagnum_Hotbar_QueenOverdrive_Safe = false\nACR_TensorMagnum_Hotbar_Detonate_Safe = false\nACR_TensorMagnum_Hotbar_Potion_Safe = false\nACR_TensorMagnum_Hotbar_HeadGraze_Safe = false\nACR_TensorMagnum_Hotbar_SecondWind_Safe = false\nACR_TensorMagnum_Hotbar_Sprint_Safe = false\nACR_TensorMagnum_Hotbar_LimitBreak_Safe = false\nACR_TensorMagnum_Hotbar_Flamethrower_Safe = false\nACR_TensorMagnum_Wildfire = true\n\n-- Custom Hotbar\nACR_TensorMagnum_Hotbar_HeadGraze_Custom = false\nACR_TensorMagnum_Hotbar_HeadGraze_Custom_Safe = false\n\nif eventArgs.oldData.PotsEnabled ~= nil or AnyoneCore.Settings.PotionOverride == true then\n\t\tACR_TensorMagnum_Potion = true\nend\n\nif eventArgs.oldData.startCombat ~= nil then\ngStartCombat = false\ndata.startCombat = nil\nend\n\nif not AnyoneCore.Settings.AutoSetSpeedHacks == nil then\n\t\tif AnyoneCore.Settings.AutoSetSpeedHacks == true then\n\t\t\t\tgDevHackWalkSpeed = 6.0\n\t\t\t\tPlayer:SetSpeed(1,gDevHackWalkSpeed,gDevHackWalkSpeed,gDevHackWalkSpeed)\n\t\tend\nend\n\nJobCheck()\n\nPlayer:ClearTarget()\n\n--- End Reaction\nself.used = true\n\n",
		executeType = 2,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "reset toggles on wipe",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "4370fc7d-0c58-cee3-94ff-e04197b5c9b7",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
		},
		enabled = true,
		eventType = 10,
		execute = "-- Normal Hotbar\nACR_TensorMagnum_Hotbar_Tactician = false\nACR_TensorMagnum_Hotbar_ArmsLength = false\nACR_TensorMagnum_Hotbar_SummonQueen = false\nACR_TensorMagnum_Hotbar_QueenOverdrive = false\nACR_TensorMagnum_Hotbar_Detonate = false\nACR_TensorMagnum_Hotbar_Potion = false\nACR_TensorMagnum_Hotbar_HeadGraze = false\nACR_TensorMagnum_Hotbar_SecondWind = false\nACR_TensorMagnum_Hotbar_Sprint = false\nACR_TensorMagnum_Hotbar_LimitBreak = false\nACR_TensorMagnum_Hotbar_Flamethrower = false\n-- Safe Hotbar \nACR_TensorMagnum_Hotbar_Tactician_Safe = false\nACR_TensorMagnum_Hotbar_ArmsLength_Safe = false\nACR_TensorMagnum_Hotbar_SummonQueen_Safe = false\nACR_TensorMagnum_Hotbar_QueenOverdrive_Safe = false\nACR_TensorMagnum_Hotbar_Detonate_Safe = false\nACR_TensorMagnum_Hotbar_Potion_Safe = false\nACR_TensorMagnum_Hotbar_HeadGraze_Safe = false\nACR_TensorMagnum_Hotbar_SecondWind_Safe = false\nACR_TensorMagnum_Hotbar_Sprint_Safe = false\nACR_TensorMagnum_Hotbar_LimitBreak_Safe = false\nACR_TensorMagnum_Hotbar_Flamethrower_Safe = false\n-- Custom Hotbar\nACR_TensorMagnum_Hotbar_HeadGraze_Custom = false\nACR_TensorMagnum_Hotbar_HeadGraze_Custom_Safe = false\n\n\n-- End Reaction\nself.used = true",
		executeType = 2,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "reset hotbar on death",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "5494a0b8-df7e-362e-a535-c319d7ee9d4d",
	},
	
	{
		actions = 
		{
		},
		conditions = 
		{
		},
		enabled = false,
		eventType = 1,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "          -MISC-",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "c59c2826-ea1e-359b-8b43-ed4c0cf977cd",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "local helperVersion = 1.0\nlocal CountdownStartEnglish = \"Battle commencing in (%d+) seconds!\\n\"\nlocal CountdownStartChina = \"距离战斗开始还有(%d+)秒！\\n\"\nlocal CountdownStartFrench = \"Début du combat dans (%d+) secondes!\\n\"\nlocal CountdownStartGerman = \"Noch (%d+) Sekunden bis Kampfbeginn!\\n\"\nlocal CountdownStartJapanese = \"戦闘開始(%d+)秒！\\n\" \nlocal CountdownStartKorean = \"전투 시작 (%d+)초 전!\"\nlocal line = eventArgs.line.line\nlocal time\nif line:match(CountdownStartEnglish) then\n\t\ttime = line:match(CountdownStartEnglish)\nelseif line:match(CountdownStartFrench) then\n\t\ttime = line:match(CountdownStartFrench)\nelseif line:match(CountdownStartChina) then\n\t\ttime = line:match(CountdownStartChina)\nelseif line:match(CountdownStartGerman) then\n\t\ttime = line:match(CountdownStartGerman)\nelseif line:match(CountdownStartJapanese) then\n\t\ttime = line:match(CountdownStartJapanese)\nelseif line:match(CountdownStartKorean) then\n\t\ttime = line:match(CountdownStartKorean)\nend\n\nif time ~= nil then\n\t\t\t\tdata.countdownTime = Now()\n\t\t\t\tdata.countdownDuration = tonumber(time)\n\t\t\t\tdata.pelotonDelay = math.random(500, 7000)\n\t\t\t\tdata.reassembleDelay = math.random(1000, 2000)\n\t\t\t\tdata.targetDelay = math.random(10, 3500)\nend\n\nJobCheck(3)\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "record countdown time",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if gStartCombat == false and data.startCombat == nil then\ndata.startCombat = true\nelse\ngStartCombat = false\nend\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					1,
					12,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "disable start combat",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 3,
				actionID = -1,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					1,
					14,
					7,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "target nearest",
				potType = 1,
				setTarget = true,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Enemy",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 1,
				actionID = 7557,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPos = 
				{
				},
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					1,
					3,
					6,
					7,
					10,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = true,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				positionPreviewColor = 
				{
				},
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 1,
				actionID = 2876,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPos = 
				{
				},
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					1,
					9,
					8,
					7,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = true,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				positionPreviewColor = 
				{
				},
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 3,
				actionID = -1,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					1,
					11,
					7,
					13,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = true,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = true,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "gStartCombat = true\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					1,
					4,
					7,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "enable start combat",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 3,
				actionID = -1,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					1,
					4,
					7,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "target nearest (again)",
				potType = 1,
				setTarget = true,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Enemy",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if data.startCombat ~= nil then\ngStartCombat = false\ndata.startCombat = nil\nend\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					5,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "dequeue if expired",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if data.countdownCanceled == true or (data.countdownTime ~= nil and data.countdownDuration ~= nil and data.countdownDuration * 1000 - TimeSince(data.countdownTime) <= 0) then\n    data.countdownCanceled = nil\n\t\t\t\tPlayer:ClearTarget()\n\t\t\t\tif data.startCombat == nil then\n    gStartCombat = true\n\t\t\t\telseif data.startCombat ~= nil then\n\t\t\t\tgStartCombat = false\n\t\t\t\tdata.startCombat = nil\n\t\t\t\tend\n    self.used = true\nend",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "dequeue if canceled",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return FFXIV_Common_BotRunning or (xivopeners ~= nil and (xivopeners.running)) and AnyoneCore ~= nil and AnyoneCore.Settings.BadTeamDelay ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "is bot running",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "local CountdownStartEnglish = \"Battle commencing in (%d+) seconds!\\n\"\nlocal CountdownStartChina = \"距离战斗开始还有(%d+)秒！\\n\"\nlocal CountdownStartFrench = \"Début du combat dans (%d+) secondes!\\n\"\nlocal CountdownStartGerman = \"Noch (%d+) Sekunden bis Kampfbeginn!\\n\"\nlocal CountdownStartJapanese = \"戦闘開始(%d+)秒！\\n\" \nlocal CountdownStartKorean = \"전투 시작 (%d+)초 전!\\n\"\nlocal correct\n\nlocal line = eventArgs.line.line\nif line:match(CountdownStartEnglish) then\n        correct = true\nelseif line:match(CountdownStartFrench) then\n        correct = true\nelseif line:match(CountdownStartChina) then\n        correct = true\nelseif line:match(CountdownStartGerman) then\n        correct = true\nelseif line:match(CountdownStartJapanese) then\n        correct = true\nelseif line:match(CountdownStartKorean) then\n        correct = true\nend\nreturn correct ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "Battle commencing in 10 seconds!",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "is text countdown",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.countdownTime ~= nil and data.countdownDuration ~= nil and data.countdownDuration * 1000 - TimeSince(data.countdownTime) <= 13000 - data.pelotonDelay",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "time is -13 + random",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.countdownTime ~= nil and data.countdownDuration ~= nil and data.countdownDuration * 1000 - TimeSince(data.countdownTime) <= 0 + AnyoneCore.Settings.BadTeamDelay",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "time is 0",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.countdownTime ~= nil and data.countdownDuration ~= nil and data.countdownDuration * 1000 - TimeSince(data.countdownTime) <= 0",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "time is < 0",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 2,
				buffDuration = 0,
				buffID = 1199,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore.Settings.PrepullHelper == true and Player.job == 31",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "is prepull enabled",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 1,
				actionID = 2876,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 2,
				conditionLua = "",
				conditionType = 4,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.countdownTime ~= nil and data.countdownDuration ~= nil and data.countdownDuration * 1000 - TimeSince(data.countdownTime) <= 6000 - data.reassembleDelay",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "time is -6 + random",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore.Settings.PrepullHelperPeloton == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "is peloton enabled",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.countdownTime ~= nil and data.countdownDuration ~= nil and data.countdownDuration * 1000 - TimeSince(data.countdownTime) <= 1400 + AnyoneCore.Settings.BadTeamDelay\n",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "time is -1.4",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.countdownTime ~= nil and data.countdownDuration ~= nil and data.countdownDuration * 1000 - TimeSince(data.countdownTime) <= 15000",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "time is -15",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return (xivopeners ~= nil and (xivopeners.running == true and xivopeners.settings[Player.job].useTincture == true)) or (gACRSelectedProfiles[Player.job] == \"TensorMagnum\" and (ACR_TensorMagnum_Potion == true))\n",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check if pots are enabled",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.countdownTime ~= nil and data.countdownDuration ~= nil and data.countdownDuration * 1000 - TimeSince(data.countdownTime) <= 15000 - data.targetDelay",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "time is -15 + random",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 7,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "prepull helper",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "f5b4faad-4685-1f7e-85f9-61313fe7aae8",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "data.countdownCanceled = true\nd(\"Countdown was canceled. Sending information back to Prepull Helper.\")\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "English",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "data.countdownCanceled = true\nd(\"Countdown was canceled. Sending information back to Prepull Helper.\")\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "China",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "data.countdownCanceled = true\nd(\"Countdown was canceled. Sending information back to Prepull Helper.\")\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					3,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "French",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "data.countdownCanceled = true\nd(\"Countdown was canceled. Sending information back to Prepull Helper.\")\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					4,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "German",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "data.countdownCanceled = true\nd(\"Countdown was canceled. Sending information back to Prepull Helper.\")\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					5,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Korean",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "data.countdownCanceled = true\nd(\"Countdown was canceled. Sending information back to Prepull Helper.\")\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					6,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Japanese",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "Countdown canceled by",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "English",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "取消了战斗开始倒计时",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "China",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "Le compte à rebours a été interrompu par",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "French",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "hat den Countdown abgebrochen.",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "German",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "님이 초읽기를 취소했습니다",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Korean",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "戦闘開始.",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Japanese",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 7,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "prepull cancel",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "5b48020f-48bc-b9f4-bcbb-1acb1269b1c4",
	},
	
	{
		actions = 
		{
		},
		conditions = 
		{
		},
		enabled = true,
		eventType = 11,
		execute = "if AnyoneCore ~= nil and InInstance() then\nJobCheck()\nend\nself.used = true\nself.eventConditionMismatch = true",
		executeType = 2,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "job check",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "a92392e4-668b-d1d4-b9cc-3214fd6b8546",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "local target = EntityList:Get(eventArgs.entityID)\nFaceAway.Entity = target\nif target.type == 2 then\nPlayer:SetTarget(eventArgs.entityID)\nend\nFaceAway.FaceAway = true\nif AnyoneCore.Settings.DrawFaceAwayNoReactions == true then\ndata.dontdrawreactionsfacing = true\nend\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
				},
				endIfUsed = false,
				gVar = "",
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "look away",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "FaceAway.FaceAway = false\nFaceAway.Entity = nil\ndata.dontdrawreactionsfacing = nil\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
				},
				endIfUsed = true,
				gVar = "",
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "dequeue",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 3,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0.25,
				channelCheckType = 3,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 2,
				conditionLua = "local spellCheck = {\n[343] = true, -- Doomsay\n[352] = true, -- Chaotic Eye\n[410] = true, -- Stone Gaze\n[498] = true, -- Cold Gaze\n[499] = true, -- Stone Gaze\n[512] = true, -- Cursed Gaze\n[513] = true, -- Dread Gaze\n[743] = true, -- Mudslinger\n[1161] = true, -- Stone Gaze\n[1969] = true, -- Petrifaction\n[1979] = true, -- Petrifaction\n[2410] = true, -- Level X Petrify\n[2516] = true, -- Petrifaction\n[2526] = true, -- Petrifaction\n[2734] = true, -- Stone Gaze\n[2824] = true, -- Petrifaction\n[2832] = true, -- Mortal Ray\n[3027] = true, -- Calcifying Mist\n[3173] = true, -- Entrance\n[3281] = true, -- Mortal Gaze\n[4201] = true, -- the Dragon's Gaze\n[4331] = true, -- Petrifaction\n[4492] = true, -- Quarry Lake\n[4493] = true, -- Naked Soul\n[4522] = true, -- Paradise Lost\n[4528] = true, -- Hypnotize\n[4537] = true, -- Headlight\n[4554] = true, -- Headwind\n[4666] = true, -- Calcifying Mist\n[4682] = true, -- Evil Eye\n[5028] = true, -- Petrifaction\n[5041] = true, -- Evil Eye\n[5140] = true, -- Stone Gaze\n[5154] = true, -- Petrifaction\n[5216] = true, -- Frond Fatale\n[5257] = true, -- the Dragon's Gaze\n[5366] = true, -- Foregone Gleam\n[5374] = true, -- Petrifaction\n[5431] = true, -- Petrifaction\n[5788] = true, -- Oogle\n[5832] = true, -- Mysterious Light\n[6100] = true, -- Mortal Ray\n[6146] = true, -- Assimilation\n[6202] = true, -- Frond Affeared\n[6351] = true, -- Stone Gaze\n[6356] = true, -- Stone Gaze\n[6379] = true, -- Quarry Lake\n[6403] = true, -- Cold Feet\n[6444] = true, -- Eye of the Stunted\n[6445] = true, -- Eye of the Wildered\n[6446] = true, -- Eye of the Slithered\n[6521] = true, -- Divine Spark\n[6582] = true, -- Divine Spark\n[6939] = true, -- Hypnotize\n[6953] = true, -- Mysterious Light\n[6957] = true, -- Foregone Gleam\n[7034] = true, -- Eye of the Stunted\n[7043] = true, -- Evil Eye\n[7182] = true, -- Nightmare\n[7200] = true, -- Hollow Nightmare\n[7270] = true, -- Meracydian Fear\n[7364] = true, -- Flash Powder\n[7651] = true, -- Eyeshine\n[7672] = true, -- Petrifying Eye\n[7675] = true, -- Evil Eye\n[7734] = true, -- Meracydian Fear\n[7779] = true, -- Petrifying Eye\n[7940] = true, -- Empty Gaze\n[7949] = true, -- Eye of the Fierce\n[8066] = true, -- Mad Stare\n[8194] = true, -- Nightmarish Light\n[8648] = true, -- Foregone Gleam\n[8717] = true, -- Inner Demons\n[8952] = true, -- Squelch\n[9030] = true, -- Overlong Glance\n[9071] = true, -- Death's Gaze\n[9165] = true, -- Eyeshine\n[9485] = true, -- Demon Eye\n[9542] = true, -- Frond Affeared\n[9557] = true, -- Eyeshine\n[9613] = true, -- Inner Demons\n[9649] = true, -- Petrifaction\n[9829] = true, -- Eye of the Fire\n[10274] = true, -- Divine Lure\n[10275] = true, -- Divine Lure\n[10679] = true, -- Absolute Terror\n[10769] = true, -- Petrifying Eye\n[10852] = true, -- Double Hex Eye\n[10956] = true, -- Explosive Dehiscence\n[11159] = true, -- Wile of the Tengu\n[11602] = true, -- Cerulean Ray\n[11608] = true, -- Mortal Ray\n[11645] = true, -- Mortal Gaze\n[11671] = true, -- Hex Eye\n[11750] = true, -- Quarry Lake\n[11752] = true, -- Hypnotize\n[11789] = true, -- Stone Gaze\n[11900] = true, -- Neuro Squama\n[11922] = true, -- Eye of the Fire\n[11973] = true, -- Stone Gaze\n[12174] = true, -- Blinding Burst\n[12190] = true, -- Wile of the Tengu\n[12261] = true, -- Eyeshine\n[12281] = true, -- Allagan Fear\n[12322] = true, -- Nightmarish Light\n[12357] = true, -- Shifting Light\n[12397] = true, -- Calcifying Mist\n[12416] = true, -- Frond Fatale\n[12442] = true, -- Hex\n[12513] = true, -- Petrifying Eye\n[12528] = true, -- Eye of the Slithered\n[12529] = true, -- Cold Stare\n[12553] = true, -- Naked Soul\n[12563] = true, -- Mysterious Light\n[12587] = true, -- Empty Gaze\n[12708] = true, -- Frond Fatale\n[13257] = true, -- Eyes of Anguish\n[13263] = true, -- Eye of the Fire\n[13296] = true, -- Evil Eye\n[13299] = true, -- Evil Eye\n[13368] = true, -- Hypnotize\n[13410] = true, -- Erratic Blaster\n[13552] = true, -- Imp Choir\n[13712] = true, -- Dread Gaze\n[13784] = true, -- Frond Affeared\n[14200] = true, -- Devitalize\n[14691] = true, -- Demon Eye\n[14692] = true, -- Cold Stare\n[14694] = true, -- Dread Gaze\n[14875] = true, -- Cry of Rage\n[14951] = true, -- Dark Sabbath\n[15030] = true, -- Chilling Glare\n[15078] = true, -- Explosive Dehiscence\n[15272] = true, -- Eye of the Fierce\n[15381] = true, -- Dread Gaze\n[15455] = true, -- Cold Gaze\n[15457] = true, -- Stone Gaze\n[15469] = true, -- Petrifaction\n[15475] = true, -- Petrifaction\n[15477] = true, -- Wile of the Tengu\n[16025] = true, -- Enthrall\n[16976] = true, -- Headlight\n[17198] = true, -- Charming Chasse\n[17360] = true, -- Coin Toss\n[17540] = true, -- Quarry Lake\n[17856] = true, -- Petro Eyes\n[17955] = true, -- Terrifying Glance\n[17973] = true, -- Cold Gaze\n[18017] = true, -- Stone Gaze\n[18041] = true, -- Petrifying Eye\n[18818] = true, -- Dread Gaze\n[19198] = true, -- Negative Aura\n[19995] = true, -- ネガティブオーラ\n[20001] = true, -- Crushing Gaze\n}\n\nlocal caster = EntityList:Get(eventArgs.entityID)\nreturn spellCheck[eventArgs.spellID] == true and caster and caster.castinginfo.casttime - caster.castinginfo.channeltime <= 0.75",
				conditionType = 5,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "channel time check",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "Event Entity",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore.FaceAwayID[eventArgs.spellID] == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "dequeue check",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore ~= nil and FaceAway ~= nil and AnyoneCore.Settings.FaceAwayEnabler == true and AnyoneCore.Settings.UseFaceAwayReactions == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "settings check",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 3,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "Face Away channels",
		throttleTime = 400,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 10,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "0dfab91b-184c-586d-baa8-0c4ff9e36089",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "local t = Player:GetTarget()\nif t then\nlocal radius = t.Distance+2\nArgus.addCircleFilled(t.pos.x, t.pos.y, t.pos.z, 0.1, 10, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), GUI:ColorConvertFloat4ToU32(0, 0, 0, 0), 0.1)\nArgus.addConeFilled(Player.pos.x, Player.pos.y, Player.pos.z, radius, math.rad(90), Player.pos.h, 30, GUI:ColorConvertFloat4ToU32(1, 0, 0, 0.1), GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 2)\nArgus.addConeFilled(Player.pos.x, Player.pos.y, Player.pos.z, radius, math.rad(30), Player.pos.h+math.rad(60), 30, GUI:ColorConvertFloat4ToU32(0, 1, 0, 0.1), GUI:ColorConvertFloat4ToU32(0, 1, 0, 1), 2)\nArgus.addConeFilled(Player.pos.x, Player.pos.y, Player.pos.z, radius, math.rad(30), Player.pos.h-math.rad(60), 30, GUI:ColorConvertFloat4ToU32(0, 1, 0, 0.1), GUI:ColorConvertFloat4ToU32(0, 1, 0, 1), 2)\nend\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
				},
				endIfUsed = false,
				gVar = "",
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return Argus ~= nil and AnyoneCore ~= nil and FaceAway ~= nil and (FaceAway.FaceAway == true or FaceAway.FaceAwayKey == true or FaceAway.drawcall ~= nil and AnyoneCore ~= nil) and (AnyoneCore.Settings.FaceAwayEnabler == true and AnyoneCore.Settings.DrawFaceAway == true) and (data.dontdrawreactionsfacing == nil)",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 12,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "Draw Face Away",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "e20c8186-4610-8c0a-9db2-41ada78c511e",
	},
	
	{
		actions = 
		{
		},
		conditions = 
		{
		},
		enabled = false,
		eventType = 1,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "       -TEA REACTIONS-",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "6db2bff8-49cd-9d3e-9c6a-d3c8f860135f",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "data.limitCutNumber = eventArgs.markerID - 78\ndata.limitCutTime = Now()\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					3,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if not table.valid(data.partyLimitCutNumbers) then\n\t\t\t\tdata.partyLimitCutNumbers = {}\nend\nlocal limitCutNumber = eventArgs.markerID - 78\ndata.partyLimitCutNumbers[limitCutNumber] = eventArgs.entityID\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					3,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return eventArgs.entityID == Player.id and eventArgs.markerID - 78 >= 1 and eventArgs.markerID - 78 <= 8",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return eventArgs.markerID - 78 >= 1 and eventArgs.markerID - 78 <= 8",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 887,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 4,
		execute = "",
		executeType = 1,
		lastUse = 0,
		loop = false,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "limit cut number",
		throttleTime = 0,
		time = 200,
		timeRange = true,
		timelineIndex = 39,
		timeout = 5,
		timerEndOffset = 40,
		timerOffset = 0,
		timerStartOffset = -15,
		used = false,
		uuid = "7d20aec2-1706-c44d-b675-fd562f0fdb11",
	},
	
	{
		actions = 
		{
			
			{
				aType = 3,
				actionID = -1,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = true,
				stopMoving = true,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = true,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 2,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = 18559,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 887,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 3,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "stillness untarget/stop",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "5182eb7d-547b-e5c2-a4e1-0185e643de14",
	},
	
	{
		actions = 
		{
			
			{
				aType = 3,
				actionID = -1,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = true,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = 9042,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "ContentID",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 2,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = 18559,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 887,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 2,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "stillness retarget",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "61c2cf26-ad6b-0261-aa97-99501e8d10ed",
	},
	
	{
		actions = 
		{
		},
		conditions = 
		{
		},
		enabled = false,
		eventType = 1,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "       -UCOB REACTIONS-",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "b298c6d9-c238-feae-9f6d-fff4431b712f",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "self.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "ACR_TensorMagnum_Drill = false\nACR_TensorMagnum_AirAnchor = false\nACR_TensorMagnum_CD = false\nACR_TensorMagnum_Hypercharge = false\nACR_TensorMagnum_Reassemble = false\nACR_TensorMagnum_HoldRico = true\nACR_TensorMagnum_HoldGR = true\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "disable if you get hatch",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = 344,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return eventArgs.entityID == Player.id and eventArgs.markerID == 118",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 3,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = 9214,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 733,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 7,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 4,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "toggle off with hatch",
		throttleTime = 5750,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "9afb68b2-5f21-bb1d-9a0e-ad5c444f044f",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "ACR_TensorMagnum_Drill = false\nACR_TensorMagnum_AirAnchor = false\nACR_TensorMagnum_CD = false\nACR_TensorMagnum_Hypercharge = false\nACR_TensorMagnum_Reassemble = false\nACR_TensorMagnum_HoldRico = true\nACR_TensorMagnum_HoldGR = true\ndata.InNeurolink = true\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "also disable if in neurolink",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "ACR_TensorMagnum_Drill = true\nACR_TensorMagnum_AirAnchor = true\nACR_TensorMagnum_CD = true\nACR_TensorMagnum_Hypercharge = true\nACR_TensorMagnum_Reassemble = true\nACR_TensorMagnum_HoldRico = false\nACR_TensorMagnum_HoldGR = false\ndata.InNeurolink = false\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					4,
					5,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 733,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 7,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = 344,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 3,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = 9214,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.InNeurolink == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 2,
				buffDuration = 0,
				buffID = 344,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 1,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "toggle off/on after",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "8ebecf18-ed43-f115-a1ce-db095ac73059",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true return end\nlocal ent = EntityList:Get(eventArgs.entityID)\nif not ent then self.used = true return end\nArgus.addTimedConeFilled(6000, 0, 0, 0, 25, math.rad(90), 0, 30, {r = 0.7, g = 0.2, b = 0}, 0.3, 0.3, 0, nil, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1)\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
					4,
					5,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 733,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 7,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return eventArgs.markerID == 40\n",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore.Settings.DrawNaelQuotes == true and AnyoneCore ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 733,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 4,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "draw earthshaker cones",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "4908002a-c87d-6e18-89ac-2a3014fd90e1",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then\n\t\t Argus.addTimedDonutFilled(6000, ent.pos.x, ent.pos.y, ent.pos.z, 6, 22, 20, {r = 1, g = 0.4, b = 0}, 0.2, 0.2, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\t\t\tArgus.addTimedCircleFilled(3000, ent.pos.x, ent.pos.y, ent.pos.z, 9, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 4500, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Draw Donut > Circle (LD>IC)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\n--for id, ent in pairs(TensorCore.getEntityGroupList(\"Most Clustered Ally\")) do    \n--\t\tif ent then                     \n--\t\t\t\tArgus.addTimedCircleFilled(3500, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 0.6, g = 0.6, b = 0.2}, 0.2, 0.2, 1500, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n--\t\tend \n--end\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then\n\t\t\tArgus.addTimedCircleFilled(5500, ent.pos.x, ent.pos.y, ent.pos.z, 9, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 3500, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					4,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Draw Circle > Circle (TB>IC)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\n--for id, ent in pairs(TensorCore.getEntityGroupList(\"Most Clustered Ally\")) do    \n--\t\tif ent then            \n--\t\t\t\tArgus.addTimedCircleFilled(3500, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 0.6, g = 0.6, b = 0.2}, 0.2, 0.2, 1500, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n--\t\tend \n--end\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then\n\t\t Argus.addTimedDonutFilled(6500, ent.pos.x, ent.pos.y, ent.pos.z, 6, 22, 20, {r = 1, g = 0, b = 0}, 0.2, 0.2, 3500, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					5,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Draw Donut > Circle (TB>LD)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then             \n\t\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then\n\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 9, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 4000, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					6,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Draw Circles > Circle (RD>IC)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then            \n\t\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then\n\t\t Argus.addTimedDonutFilled(6000, ent.pos.x, ent.pos.y, ent.pos.z, 6, 22, 20, {r = 1, g = 0, b = 0}, 0.2, 0.2, 4000, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					7,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Draw Circles > Donut (RD>LD)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nlocal mt = TensorCore.getEntityByGroup(\"Main Tank\")\n\t\tif mt then\n\t\t\t\tArgus.addTimedCircleFilled(5000, mt.pos.x, mt.pos.y, mt.pos.z, 5, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 10000, mt.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\t\tend\n\n--for id, ent in pairs(TensorCore.getEntityGroupList(\"Most Clustered Ally\")) do    \n--\t\tif ent then                    \n--\t\t\t\tArgus.addTimedCircleFilled(3000, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 14500, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n--\t\tend \n--end\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					8,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Draw Circle > Circle (DD>TB)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then                     \n\t\t\t\tArgus.addTimedCircleFilled(7000, ent.pos.x, ent.pos.y, ent.pos.z, 4, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 7000, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\nlocal mt = TensorCore.getEntityByGroup(\"Main Tank\")\n\t\tif mt then\n\t\t\t\tArgus.addTimedCircleFilled(4000, mt.pos.x, mt.pos.y, mt.pos.z, 5, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 15000, mt.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\t\tend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					9,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Draw Circles > Circle (MS>DD)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then\n\t\t Argus.addTimedDonutFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 6, 22, 20, {r = 1, g = 0, b = 0}, 0.2, 0.2, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\n--for id, ent in pairs(TensorCore.getEntityGroupList(\"Most Clustered Ally\")) do    \n--\t\tif ent then                     \n--\t\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 5000, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n--\t\tend \n--end\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					10,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Draw Donut > Circle (LD>TB)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then\n\t\t Argus.addTimedDonutFilled(6750, ent.pos.x, ent.pos.y, ent.pos.z, 6, 22, 20, {r = 1, g = 0, b = 0}, 0.2, 0.2, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then            \n\t\t\t\tArgus.addTimedCircleFilled(4000, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 4500, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then                     \n\t\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 4, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 11000, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					12,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "LD > RD > MS (fellruin)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then \n\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then           \n\t\t Argus.addTimedDonutFilled(4000, ent.pos.x, ent.pos.y, ent.pos.z, 6, 22, 20, {r = 1, g = 0, b = 0}, 0.2, 0.2, 5000, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5) \n\t\tend \nend\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent then                     \n\t\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 4, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 11000, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					13,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "RD > LD > MS (fellruin)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then\n\t\t Argus.addTimedDonutFilled(4000, ent.pos.x, ent.pos.y, ent.pos.z, 6, 22, 20, {r = 1, g = 0, b = 0}, 0.2, 0.2, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then            \n\t\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 4500, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\n---thermionic beam won't be drawn\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					14,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "LD > RD > TB (adds)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then\n\t\t Argus.addTimedDonutFilled(6000, ent.pos.x, ent.pos.y, ent.pos.z, 6, 22, 20, {r = 1, g = 0.4, b = 0}, 0.2, 0.2, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\t\t\tArgus.addTimedCircleFilled(3000, ent.pos.x, ent.pos.y, ent.pos.z, 9, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 4500, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then            \n\t\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 8000, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					15,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "LD > IC > RD (adds)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then\n\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 9, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\n---wont draw thermionic beam\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then            \n\t\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 8000, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					16,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "IC > TB > RD (adds)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 2612 then\n\t\t\tArgus.addTimedCircleFilled(5000, ent.pos.x, ent.pos.y, ent.pos.z, 9, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\tend\nend\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then            \n\t\t\t\tArgus.addTimedCircleFilled(4000, ent.pos.x, ent.pos.y, ent.pos.z, 3, 30, {r = 1, g = 0, b = 0}, 0.2, 0.2, 5000, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\n---wont draw thermionic beam\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					17,
					11,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "IC > RD > TB (adds)",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 733,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 7,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "shine you the iron path!",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Lunar Dynamo > Iron Chariot",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "lead me to iron rule!",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Thermionic > Iron Chariot",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "Take fire,",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Thermionic > Lunar Dynamo",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "the iron path to",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Raven's Dive > Iron Chariot",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "the hallowed moon to call",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Raven's Dive > Lunar Dynamo",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "scorch you the earth",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Dalamud Dive > Thermionic",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "exalt you the red moon",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Meteor Stream > Dalamud Dive",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "take fire and scorch my foes",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Lunar Dynamo > Thermionic",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore.Settings.DrawNaelQuotes == true and AnyoneCore ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check if draws are enabled",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "a rain of stars to bring",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "LD > RD > MS (fellruin)",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "the moon and stars to bring",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "RD > LD > MS",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "upon burning earth to tread",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "LD > RD > TB (adds)",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "in my descent to wield",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "LD > IC > RD",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "take fire and descend",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "IC > TB > RD",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "descend with fiery edge",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "IC > RD > TB",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 7,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "draw quotes",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "d65e4b1d-5ea0-4265-93e4-736b529b8ee6",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then             \n\t\t\t\tArgus.addTimedCircleFilled(1700, ent.pos.x, ent.pos.y, ent.pos.z, 1, 30, {r = 1, g = 1, b = 0.4}, 0.1, 0.1, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\t\tend \nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
					4,
					5,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then             \n\t\t\t\tArgus.addTimedCircleFilled(500, ent.pos.x, ent.pos.y, ent.pos.z, 1, 30, {r = 1, g = 0, b = 0}, 0.4, 0.4, 0, nil, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
					4,
					5,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return eventArgs.spellID == 9898\n",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 7,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore.Settings.DrawNaelQuotes == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 733,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 3,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "draw twisters",
		throttleTime = 1700,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "9c625e0e-9996-a156-a39f-6d8abfed8ddd",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then             \n\t\t\t\tArgus.addTimedCircleFilled(3900, ent.pos.x, ent.pos.y, ent.pos.z, 1, 30, {r = 1, g = 1, b = 0.4}, 0.1, 0.1, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\t\tend \nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
					4,
					5,
					7,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then             \n\t\t\t\tArgus.addTimedCircleFilled(1400, ent.pos.x, ent.pos.y, ent.pos.z, 1, 30, {r = 1, g = 0, b = 0}, 0.4, 0.4, 0, nil, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)    \n\t\tend \nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
					4,
					5,
					7,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then             \n\t\t\t\tArgus.addTimedCircleFilled(4615, ent.pos.x, ent.pos.y, ent.pos.z, 1, 30, {r = 1, g = 1, b = 0.4}, 0.1, 0.1, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\t\tend \nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
					4,
					6,
					7,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "if Argus == nil then self.used = true end\n\nfor id, ent in pairs(TensorCore.getEntityGroupList(\"Party\")) do    \n\t\tif ent and ent.alive == true then             \n\t\t\t\tArgus.addTimedCircleFilled(700, ent.pos.x, ent.pos.y, ent.pos.z, 1, 30, {r = 1, g = 1, b = 0.4}, 0.1, 0.1, 0, ent.id, GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 1.5)\n\t\tend \nend\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
					4,
					6,
					7,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return eventArgs.spellID == 9906\n",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 7,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore.Settings.DrawNaelQuotes == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 733,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.DontDrawDive == nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.DontDrawDive ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 3,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "draw twisting dive",
		throttleTime = 3900,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "c5b8549f-b2cc-7ad1-9bbb-42177114bbd6",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "Argus.addRectFilled(\n        0,\n        0,\n        0,\n        TensorCore.getDistance2d({x = 0, y = 0, z = 0}, Player.pos) + 11,\n        0,\n        TensorCore.getHeadingToTarget({x = 0, y = 0, z = 0}, Player.pos),\n        nil,\n        GUI:ColorConvertFloat4ToU32(250, 250, 250, 1),\n        1.5\n    )\n    \n    local projectedPos = TensorCore.getPosInDirection(Player.pos, TensorCore.getHeadingToTarget({x = 0, y = 2.38, z = 0}, Player.pos), 11)\n    Argus.addCircleFilled(\n        projectedPos.x,\n        projectedPos.y,\n        projectedPos.z,\n        1,\n        30,\n        GUI:ColorConvertFloat4ToU32(250, 250, 0.5, 0.2),\n        GUI:ColorConvertFloat4ToU32(250, 0.5, 0.5, 1),\n        1.5\n    )\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
					4,
				},
				endIfUsed = false,
				gVar = "",
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "draw heavensfall knockback",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "local party = TensorCore.getEntityGroupList(\"Party\")\nlocal content = data.furthestContent\nlocal enemy = TensorCore.getEntityByGroup(\"ContentID\", {contentid = content, subgroup = \"Nearest\"})\n\nlocal furthestDist, secondFurthestDist = -999, -999\nlocal furthest, secondFurthest\n\nfor id, ent in pairs(party) do\n    local dist = TensorCore.getDistance3d(ent.pos, enemy.pos)\n    if dist and dist > furthestDist then\n        furthestDist = dist\n        furthest = ent\n    end\nend\n\nfor id, ent in pairs(party) do\n    local dist = TensorCore.getDistance3d(ent.pos, enemy.pos)\n    if furthest and ent.id ~= furthest.id and dist > secondFurthestDist then\n        secondFurthestDist = dist\n        secondFurthest = ent\n    end\nend\n\nif furthest and (furthestDist >= 19) then\n    Argus.addCircleFilled(furthest.pos.x, furthest.pos.y, furthest.pos.z, 6, 30, GUI:ColorConvertFloat4ToU32(200, 200, 0.1, 0.2), GUI:ColorConvertFloat4ToU32(100, 100, 0, 1), 2)\nend\n\nif secondFurthest and (secondFurthestDist >= 19) then\n\t\tArgus.addCircleFilled(secondFurthest.pos.x, secondFurthest.pos.y, secondFurthest.pos.z, 6, 30, GUI:ColorConvertFloat4ToU32(255, 0, 0.1, 0.2), GUI:ColorConvertFloat4ToU32(100, 100, 0, 1), 2)\nend\n\n---Argus.addTimedCircleFilled(10000, secondFurthest.pos.x, secondFurthest.pos.y, secondFurthest.pos.z, 8, 30, {r = 255/255, g = 152/255, b = 0}, 0.2, 0.2, 0, secondFurthest.id, GUI:ColorConvertFloat4ToU32(2255/255, 152/255, 0, 1), 1.5)\n---Argus.addTimedCircleFilled(10000, Player.pos.x, Player.pos.y, Player.pos.z, 8, 30, {r = 255/255, g = 152/255, b = 0}, 0.2, 0.2, 0, Player.id, GUI:ColorConvertFloat4ToU32(2255/255, 152/255, 0, 1), 1.5)\n\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					3,
					5,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "draw liquid hells",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore ~= nil and AnyoneCore.Settings.DrawNaelQuotes == true and Argus ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check settings",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 733,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check map id",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 7,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check if in combat",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.drawHeavensfallKnockback == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check hfkb timeline",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.DrawFurthest ~= nil and data.furthestContent ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check lh timelines",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 12,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "ucob draws",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "b92b96c4-e000-ac22-bb38-83b5a0d9682e",
	},
	
	{
		actions = 
		{
		},
		conditions = 
		{
		},
		enabled = true,
		eventType = 1,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "       -UWU REACTIONS-",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "fc3be950-cbde-bf25-bf91-e40f0d4eb0e6",
	},
	
	{
		actions = 
		{
			
			{
				aType = 3,
				actionID = -1,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					3,
					4,
				},
				endIfUsed = true,
				gVar = "",
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = true,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = 1185,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "ContentID",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 6,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
					2,
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Highest HP",
				filterTargetType = "ContentID",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = 1186,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "--credits to qwert for writing this nail swap reaction\nlocal target = EntityList:Get(eventArgs.detectionTargetID)\nlocal current = Player:GetTarget()\nif (target == nil or current == nil) then return false end\nif current.HP.percent < 30 and target.id ~= current.id and target.contentid == 1186 then\n    return true\nelse\n    return false\nend\nreturn false",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "HP & target check",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.nailphase == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Variable",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 777,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 1,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "nail swap",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "43a554a0-3cde-90e2-9591-50ebf8782dfa",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "local duration = 60\nlocal width = 0.1\nlocal length\nlocal t = TensorCore.getEntityByGroup(\"ContentID\", {contentid = 1801, subgroup = \"Nearest\"})\nif t and Argus then\nlength = (24 + t.Distance) \nArgus.addTimedRectFilled(duration, t.pos.x, t.pos.y, t.pos.z, length, width, t.pos.h, {r = 0, g = 0.5, b = 0.5}, 0, 0, 0, t.id, Player.id, true, GUI:ColorConvertFloat4ToU32(0, 0.5, 0.5, 1), 1.5)\nend\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Upheaval",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "Argus.addRectFilled(119.3747253418, 0, 100, 40, 10, -1.57, GUI:ColorConvertFloat4ToU32(MoogleTelegraphs.Settings.fillRGB.enemy.r, MoogleTelegraphs.Settings.fillRGB.enemy.g, MoogleTelegraphs.Settings.fillRGB.enemy.b, MoogleTelegraphs.Settings.alphafill.enemy.large.max), GUI:ColorConvertFloat4ToU32(MoogleTelegraphs.Settings.outlineRGB.enemy.r, MoogleTelegraphs.Settings.outlineRGB.enemy.g, MoogleTelegraphs.Settings.outlineRGB.enemy.b, MoogleTelegraphs.Settings.outlineRGB.enemy.a), MoogleTelegraphs.Settings.outlineThickness.enemy)\nArgus.addRectFilled(100, 0, 80.625274658203, 40, 10, 0, GUI:ColorConvertFloat4ToU32(MoogleTelegraphs.Settings.fillRGB.enemy.r, MoogleTelegraphs.Settings.fillRGB.enemy.g, MoogleTelegraphs.Settings.fillRGB.enemy.b, MoogleTelegraphs.Settings.alphafill.enemy.large.max), GUI:ColorConvertFloat4ToU32(MoogleTelegraphs.Settings.outlineRGB.enemy.r, MoogleTelegraphs.Settings.outlineRGB.enemy.g, MoogleTelegraphs.Settings.outlineRGB.enemy.b, MoogleTelegraphs.Settings.outlineRGB.enemy.a), MoogleTelegraphs.Settings.outlineThickness.enemy)\n\nself.used = true\n",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					3,
					2,
				},
				endIfUsed = false,
				gVar = "",
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Afterburn Rect",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "local t = TensorCore.getEntityByGroup(\"ContentID\", {contentid = 1644, subgroup = \"Nearest\"})\nif t and Argus then\nArgus.addDonutFilled(t.pos.x, t.pos.y, t.pos.z, 7, 20, 50, GUI:ColorConvertFloat4ToU32(MoogleTelegraphs.Settings.fillRGB.enemy.r, MoogleTelegraphs.Settings.fillRGB.enemy.g, MoogleTelegraphs.Settings.fillRGB.enemy.b, MoogleTelegraphs.Settings.alphafill.enemy.large.max), GUI:ColorConvertFloat4ToU32(MoogleTelegraphs.Settings.outlineRGB.enemy.r, MoogleTelegraphs.Settings.outlineRGB.enemy.g, MoogleTelegraphs.Settings.outlineRGB.enemy.b, MoogleTelegraphs.Settings.outlineRGB.enemy.a), MoogleTelegraphs.Settings.outlineThickness.enemy)\n\nend\nself.used = true\n",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					4,
					2,
				},
				endIfUsed = false,
				gVar = "",
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Wicked Tornado",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "-- just for future reference ent.castinginfo.channelingid == 19473\nfor id, ent in pairs(EntityList(\"\")) do\n\tif ent.contentid == 1644 and ent.castinginfo.casttime >= 2 then\nArgus.addTimedDonutFilled(5156, ent.pos.z, ent.pos.y, ent.pos.z, 7, 20, 50, {r = 1, g = 0, b = 0}, 0.2, 0.2, 0, ent.id, GUI:ColorConvertFloat4ToU32(MoogleTelegraphs.Settings.outlineRGB.enemy.r, MoogleTelegraphs.Settings.outlineRGB.enemy.g, MoogleTelegraphs.Settings.outlineRGB.enemy.b, MoogleTelegraphs.Settings.outlineRGB.enemy.a), MoogleTelegraphs.Settings.outlineThickness.enemy)\ndata.GarudaTornadoPredation = false\n\tend\nend\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					5,
					2,
				},
				endIfUsed = false,
				gVar = "",
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Wicked Tornado Predation",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "Argus.addCircleFilled(100, 0, 100, 19.5, 50, GUI:ColorConvertFloat4ToU32(0, 0, 0, 0), GUI:ColorConvertFloat4ToU32(1, 0, 0, 1), 2)",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
				},
				endIfUsed = false,
				gVar = "",
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "Draw Map Outline",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.UpheavalDraw == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Upheaval Condition",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 777,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Self Map ID 777(uwu)",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.IfritCrossDraw == true and MoogleTelegraphs.Settings.enable == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Afterburn Condition",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.GarudaTornado == true and MoogleTelegraphs.Settings.enable == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Wicked Tornado Condition",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.GarudaTornadoPredation == true and MoogleTelegraphs.Settings.enable == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Wicked Tornado Predation Condition",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 12,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "uwu draws",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "57c70470-e383-bcf5-bc04-18dbdf5496f4",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "--credits to dedodedo for this draw\nlocal markedNails = {}\nlocal HeadingWidth = 1\nlocal durationHeading = 8000\nlocal durationHitbox = 93000\nlocal alphaMin = 0.3\nlocal alphaMax = 0.3\nlocal HeadingFill = {r = 1, g = 1, b = 0}\nlocal HeadingOutline = GUI:ColorConvertFloat4ToU32(1, 1, 0, 1)\nlocal HeadingOutlineThickness = 1.5\nlocal HitboxFill = {r = 1, g = 1, b = 0}\nlocal HitboxOutline = GUI:ColorConvertFloat4ToU32(1, 1, 0, 1)\nlocal HitBoxOutlineThickness = 1.5\nfor id, ent in pairs(EntityList(\"\")) do\n        if not markedNails[id] and ent.contentid == 1186 then\nArgus.addTimedCircleFilled(durationHitbox, ent.pos.x, ent.pos.y, ent.pos.z, ent.hitradius, 25, HitboxFill, alphaMin, alphaMax, 0, ent.id, HitboxOutline, HitBoxOutlineThickness)\nArgus.addTimedRectFilled(durationHeading, 100, 0, 100, 10, HeadingWidth, 100, HeadingFill, alphaMin, alphaMax, 0, nil, ent.id, false, HeadingOutline, HeadingOutlineThickness)\n                markedNails[id] = true    \n        end\nend\nself.used = table.size(markedNails) >= 4",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "local playerduration = 16000\nlocal radius = 8\nlocal CircleColorFill = {r = 0.7, g = 0, b = 0}\nlocal alphaMin = 0.1\nlocal alphaMax = 0.1\nlocal CircleOutline = GUI:ColorConvertFloat4ToU32(1,0,0,1)\nlocal CircleOutlineThickness = 2\nArgus.addTimedCircleFilled(playerduration, Player.pos.x, Player.pos.y, Player.pos.z, radius, 50, CircleColorFill, alphaMin, alphaMax, 0, Player.id, CircleOutline, CircleOutlineThickness)\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 2,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "pogchamp",
				eventEntityContentID = 1186,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 777,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 5,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "draw eruption baits",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "3c63c570-d0ab-a6ff-a476-a542e06d7472",
	},
	
	{
		actions = 
		{
		},
		conditions = 
		{
		},
		enabled = false,
		eventType = 1,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "        -DUTY HELPER-",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "90dbc9c7-3d08-013d-b40f-cb39d9261cd2",
	},
	
	{
		actions = 
		{
			
			{
				aType = 1,
				actionID = 16889,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					1,
					3,
					10,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = true,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 1,
				actionID = 7551,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					6,
					4,
					5,
				},
				endIfUsed = true,
				gVar = "ACR_RikuSCH_CD",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = true,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Event Entity",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 1,
				actionID = 7548,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					7,
					8,
					9,
					3,
				},
				endIfUsed = true,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = true,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore.RDPSMitigation[eventArgs.spellID] == true",
				conditionType = 2,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 2,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "miti table dequeue check",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return FFXIV_Common_BotRunning and AnyoneCore ~= nil and AnyoneCore.Settings.DutyHelperMitigation == true and AnyoneCore.Settings.DutyHelper == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check mitigation settings",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 7,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "combat check",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "local target = EntityList:Get(eventArgs.detectionTargetID)\nif target ~= nil and target.castinginfo ~= nil then\n\t\tif target.castinginfo.castinginterruptible == true then\n\t\t\treturn true\n\t\tend\nend\nreturn false",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "is interruptible?",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 3,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 2,
				conditionLua = "",
				conditionType = 4,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 25,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "25y",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "Event Entity",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return FFXIV_Common_BotRunning and AnyoneCore ~= nil and AnyoneCore.Settings.DutyHelperInterrupt == true and AnyoneCore.Settings.DutyHelper == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check interrupt settings",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 3,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 5,
				channelCheckType = 3,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 2,
				conditionLua = "",
				conditionType = 5,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 2,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "knockback table",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "Event Entity",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return FFXIV_Common_BotRunning and AnyoneCore ~= nil and AnyoneCore.Settings.DutyHelperKnockback == true and AnyoneCore.Settings.DutyHelper == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check kb settings",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore.Knockback[eventArgs.spellID] == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check kb table",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 3,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 5,
				channelCheckType = 3,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 2,
				conditionLua = "",
				conditionType = 5,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "check timer",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "Event Entity",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 3,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "Multitool",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 10,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "bfcb3e04-bd15-29ed-855c-d1bf2bd0aae2",
	},
	
	{
		actions = 
		{
			
			{
				aType = 3,
				actionID = -1,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					1,
					5,
					3,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = true,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Enemy",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 3,
				actionID = -1,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					4,
					2,
					3,
					7,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = true,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 3,
				actionID = -1,
				actionLua = "",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					6,
					3,
					7,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = true,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = true,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "if not Player:GetTarget() then return true end\nreturn false",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check target",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return FFXIV_Common_BotRunning and AnyoneCore ~= nil and AnyoneCore.Settings.DutyHelperTargeting == true and AnyoneCore.Settings.DutyHelper == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check settings",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 7,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Combat check",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "local mytarget = Player:GetTarget()\nlocal cinfo = Player.castinginfo \nreturn mytarget ~= nil and cinfo ~= nil and cinfo.channeltargetid ~= nil and (mytarget.id ~= cinfo.channeltargetid) and (cinfo.casttime - cinfo.channeltime >= 0.500)",
				conditionType = 5,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check casting info",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.stopAutoTarget == nil and data.stopAutoTargetDupe == nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check global calls",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.stopCast ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check global calls 2",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "if Player:GetTarget() ~= nil then\nlocal target = Player:GetTarget()\nend\nreturn target ~= nil and target.contentid < 30000",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check for inanimate objects",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 1,
		execute = "",
		executeType = 1,
		lastUse = 0,
		loop = true,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "Always find a target",
		throttleTime = 0,
		time = 128.9,
		timeRange = true,
		timelineIndex = 20,
		timeout = 5,
		timerEndOffset = 8,
		timerOffset = 1.375,
		timerStartOffset = -8,
		used = false,
		uuid = "df885e5b-892d-2370-b207-14ce91f22298",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "data.stopAutoTarget = true\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					3,
					5,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "data.stopAutoTarget = nil\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					3,
					4,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 3,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 1,
				channelCheckType = 3,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 2,
				conditionLua = "",
				conditionType = 5,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check timer",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "Event Entity",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.stopAutoTarget ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check global call",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return FFXIV_Common_BotRunning and AnyoneCore ~= nil and AnyoneCore.Settings.DutyHelperTargeting == true and AnyoneCore.Settings.DutyHelper == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check settings",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 7,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Combat check",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore.StopCasting[eventArgs.spellID] == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check table",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 3,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "Stop auto target",
		throttleTime = 6000,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 10,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "0d4e2fd7-ef82-80a2-b156-6998f3537f46",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "data.stopCast = true\ndata.stopAutoTargetDupe = true\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					1,
					2,
					4,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "data.stopCast = nil\ndata.stopAutoTargetDupe = nil\nself.used = true",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					3,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 3,
				buffDuration = 2,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 5,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 2,
				conditionLua = "local ClearTargetTable = {\n--stop cast and clear target\n[639] = true,\n[960] = true,\n[1049] = true,\n[1072] = true,\n[1132] = true,\n[1133] = true,\n[1269] = true,\n[1270] = true,\n[1384] = true,\n[1599] = true,\n}\n\nreturn AnyoneCore.ClearTarget[eventArgs.buffID] == true and eventArgs.buffDuration <= 2",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 2,
				eventArgType = 2,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = 0,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "-2s",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "Event Entity",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return FFXIV_Common_BotRunning and AnyoneCore ~= nil and AnyoneCore.Settings.DutyHelperTargeting == true and AnyoneCore.Settings.DutyHelper == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check Settings",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return data.stopCast ~= nil",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check global call",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore.ClearTarget[eventArgs.buffID] == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = true,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "Check table",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = "Nearest",
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = false,
		eventType = 8,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "Clear target",
		throttleTime = 4000,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 10,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "d7f3c440-9ec7-21ae-b99d-83f1970e5235",
	},
	
	{
		actions = 
		{
		},
		conditions = 
		{
		},
		enabled = false,
		eventType = 1,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "      -SAVAGE REACTIONS-",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "72ef8654-a4e5-d6df-83a5-a3a67059ca35",
	},
	
	{
		actions = 
		{
			
			{
				aType = 4,
				actionID = -1,
				actionLua = "local party = TensorCore.getEntityGroupList(\"Party\")\nlocal chainbuffs = {}\n\nfor _, ent in pairs(party) do\n    if TensorCore.hasBuff(ent, 2233) then\n        chainbuffs[#chainbuffs+1] = ent\n    end\nend\n\nfor _, chain in pairs(chainbuffs) do\n    local closest\n    local closestDist = 9999\n    \n    for _, ent in pairs(party) do\n        if ent.id ~= chain.id then\n            local dist = TensorCore.getDistance2d(ent.pos, chain.pos)\n            if dist < closestDist then\n                closest = ent\n                closestDist = dist\n            end\n        end\n    end\n    \n    if closest ~= nil then\n        Argus.addCircleFilled(\n            closest.pos.x,\n            closest.pos.y,\n            closest.pos.z,\n            2,\n            30,\n            GUI:ColorConvertFloat4ToU32(0, 0, 1, 0.2),\n            GUI:ColorConvertFloat4ToU32(0, 0, 1, 1),\n            1.5\n        )\n    end\nend",
				allowInterrupt = false,
				atomicPriority = false,
				castAtMouse = false,
				castPosX = 0,
				castPosY = 0,
				castPosZ = 0,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				conditions = 
				{
					2,
					1,
				},
				endIfUsed = false,
				gVar = "",
				gVarIndex = 1,
				gVarValue = 1,
				ignoreWeaveRules = false,
				isAreaTarget = false,
				luaNeedsWeaveWindow = false,
				luaReturnsAction = false,
				name = "",
				potType = 1,
				setTarget = false,
				showPositionPreview = false,
				stopCasting = false,
				stopMoving = false,
				targetContentID = -1,
				targetName = "",
				targetSubType = "Nearest",
				targetType = "Self",
				untarget = false,
				useForWeaving = false,
				usePot = false,
				used = false,
				variableTogglesType = 1,
			},
		},
		conditions = 
		{
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 2,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "",
				conditionType = 8,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = 906,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
			
			{
				actionCDValue = 0,
				actionID = -1,
				buffCheckType = 1,
				buffDuration = 0,
				buffID = -1,
				buffIDList = 
				{
				},
				category = 4,
				channelCheckSpellID = -1,
				channelCheckSpellIDList = 
				{
				},
				channelCheckTimeRemain = 0,
				channelCheckType = 1,
				clusterMinTarget = 1,
				clusterRadius = 8,
				clusterRange = 30,
				comparator = 1,
				conditionLua = "return AnyoneCore ~= nil and Argus ~= nil and AnyoneCore.Settings.DrawChainLightning == true",
				conditionType = 1,
				conditions = 
				{
				},
				contentid = -1,
				dequeueIfLuaFalse = false,
				enmityValue = 0,
				eventArgOptionType = 1,
				eventArgType = 1,
				eventBuffDuration = 0,
				eventBuffID = -1,
				eventChatLine = "",
				eventEntityContentID = -1,
				eventEntityID = -1,
				eventEntityName = "",
				eventMarkerID = -1,
				eventOwnerContentID = -1,
				eventOwnerID = -1,
				eventOwnerName = "",
				eventSpellID = -1,
				eventSpellName = -1,
				eventTargetContentID = -1,
				eventTargetID = -1,
				eventTargetName = "",
				filterTargetSubtype = "Nearest",
				filterTargetType = "Self",
				gaugeIndex = 1,
				gaugeValue = 0,
				hpType = 1,
				hpValue = 0,
				inCombatType = 1,
				inRangeValue = 0,
				lastSkillID = -1,
				localmapid = -1,
				matchAnyBuff = false,
				minTargetPercent = false,
				mpType = 1,
				mpValue = 0,
				name = "has argus",
				partyHpType = 1,
				partyHpValue = 0,
				partyMpType = 1,
				partyMpValue = 0,
				partyTargetContentID = -1,
				partyTargetName = "",
				partyTargetNumber = 1,
				partyTargetSubType = 1,
				partyTargetType = "All",
				rangeCheckSourceSubType = "Nearest",
				rangeCheckSourceType = "Self",
				rangeSourceContentID = -1,
				rangeSourceName = "",
				setEventTargetSubtype = 1,
				setFirstMatch = false,
			},
		},
		enabled = true,
		eventType = 12,
		execute = "",
		executeType = 1,
		lastUse = 0,
		luaNeedsWeaveWindow = false,
		luaReturnsAction = false,
		name = "draw chain lightning",
		throttleTime = 0,
		time = 0,
		timeRange = false,
		timelineIndex = 0,
		timeout = 5,
		timerEndOffset = 0,
		timerOffset = 0,
		timerStartOffset = 0,
		used = false,
		uuid = "f2f6af97-d4fe-e867-89e7-1aad9b7a9d92",
	},
}



return tbl